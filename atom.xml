<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nova7y</title>
  
  
  <link href="/yyy/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2019-05-17T06:03:46.893Z</updated>
  <id>/</id>
  
  <author>
    <name>nova7y</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue接入腾讯防水墙</title>
    <link href="/2019/05/17/Vue%E6%8E%A5%E5%85%A5%E8%85%BE%E8%AE%AF%E9%98%B2%E6%B0%B4%E5%A2%99/"/>
    <id>/2019/05/17/Vue接入腾讯防水墙/</id>
    <published>2019-05-17T06:00:57.464Z</published>
    <updated>2019-05-17T06:03:46.893Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在created中引入JS"><a href="#在created中引入JS" class="headerlink" title="在created中引入JS"></a>在created中引入JS</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">created() &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.TencentCaptcha === <span class="literal">undefined</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> ele = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>)</span><br><span class="line">    ele.src = <span class="string">'https://ssl.captcha.qq.com/TCaptcha.js'</span></span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(ele)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="在methods中写入方法"><a href="#在methods中写入方法" class="headerlink" title="在methods中写入方法"></a>在methods中写入方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">login() &#123;</span><br><span class="line">  <span class="keyword">var</span> captcha = <span class="keyword">new</span> TencentCaptcha(<span class="string">'AppID'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// res（未通过验证）= &#123;ret: 1, ticket: null&#125;</span></span><br><span class="line">    <span class="comment">// res（验证成功） = &#123;ret: 0, ticket: "String", randstr: "String"&#125;</span></span><br><span class="line">    <span class="keyword">if</span> (res.ret === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//票据</span></span><br><span class="line">      <span class="comment">//alert(res.ticket)</span></span><br><span class="line">      <span class="comment">//随机串</span></span><br><span class="line">      <span class="comment">//alert(res.randstr)</span></span><br><span class="line">      <span class="comment">// submitForm()</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 显示验证码</span></span><br><span class="line">  captcha.show()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在created中引入JS&quot;&gt;&lt;a href=&quot;#在created中引入JS&quot; class=&quot;headerlink&quot; title=&quot;在created中引入JS&quot;&gt;&lt;/a&gt;在created中引入JS&lt;/h1&gt;&lt;figure class=&quot;highlight java
      
    
    </summary>
    
      <category term="Vue" scheme="/categories/Vue/"/>
    
    
      <category term="Vue" scheme="/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue - 基础</title>
    <link href="/2019/05/16/Vue%20-%20%E5%9F%BA%E7%A1%80/"/>
    <id>/2019/05/16/Vue - 基础/</id>
    <published>2019-05-16T08:50:56.998Z</published>
    <updated>2019-05-18T05:44:02.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="md格式有问题，需要整理"><a href="#md格式有问题，需要整理" class="headerlink" title="md格式有问题，需要整理"></a>md格式有问题，需要整理</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;md格式有问题，需要整理&quot;&gt;&lt;a href=&quot;#md格式有问题，需要整理&quot; class=&quot;headerlink&quot; title=&quot;md格式有问题，需要整理&quot;&gt;&lt;/a&gt;md格式有问题，需要整理&lt;/h1&gt;
      
    
    </summary>
    
      <category term="Vue" scheme="/categories/Vue/"/>
    
    
      <category term="Vue" scheme="/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>mock.js+easyMock</title>
    <link href="/2019/05/16/mock.js+easyMock/"/>
    <id>/2019/05/16/mock.js+easyMock/</id>
    <published>2019-05-16T08:50:56.842Z</published>
    <updated>2019-05-18T05:04:21.043Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mock和easymock"><a href="#mock和easymock" class="headerlink" title="mock和easymock"></a>mock和easymock</h1><h3 id="WHY-mock-js"><a href="#WHY-mock-js" class="headerlink" title="WHY? mock.js"></a>WHY? <a href="http://mockjs.com/" target="_blank" rel="noopener">mock.js</a></h3><p>  <img src="https://live.staticflickr.com/65535/47872713731_ff131dd808_z.jpg" alt="mockjs"></p><h3 id="and-easymock"><a href="#and-easymock" class="headerlink" title="and easymock"></a>and <a href="https://www.easy-mock.com/" target="_blank" rel="noopener">easymock</a></h3><p>  <img src="https://live.staticflickr.com/65535/47820482612_ed90e43579_z.jpg" alt="easymock"></p><p>  <strong>对于全端开发工程师在与后台同学协同开发的时候会遇到问题</strong>: <em>(问号脸)后台接口都没有,请求个吉尔?</em><br>  我们只能使用比如Apache/node等后台语言搭建一个服务器,再加上Mysql数据库加上可视化Navicat,给我们提供数据服务. <strong>很烦</strong>,因为我们要模拟假数据表,关联数据库,测试运行后台服务并解决跨域等问题,然后才能做 <strong>前端开发</strong>,很难受,假如<strong>有一款在线工具能按照我们的接口文档咔咔往上整数据,然后发送的ajax请求都能响应且数据格式正确</strong>, 这就很舒服 ,最好<strong>能和Vue等主流框架配合使用</strong>那就更舒服了(<code>到vue再说</code>).</p><p><strong>面试装逼:</strong> <em>Mock.js</em>是一款前端开发中拦截Ajax请求再生成随机数据响应的工具.可以用来模拟服务器响应. 优点是非常简单方便, 无侵入性, 基本覆盖常用的接口数据类型.</p><hr><hr><h2 id="思考-提个简单的开发需求"><a href="#思考-提个简单的开发需求" class="headerlink" title="思考: 提个简单的开发需求:"></a>思考: 提个简单的开发需求:</h2>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">请求后台某个接口,返回<span class="number">10</span><span class="number">-15</span>条学生数据: 要求包含 姓名,年龄,性别. 成功状态码:<span class="number">200</span> .成功状态信息: success.</span><br><span class="line"></span><br><span class="line"><span class="string">`响应数据结构分析:`</span></span><br><span class="line">&#123;</span><br><span class="line">  status:<span class="number">200</span>,</span><br><span class="line">  msg:<span class="string">'success'</span>,</span><br><span class="line">  stuInfo:</span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">'abc'</span>,</span><br><span class="line">      age:<span class="number">10</span>,</span><br><span class="line">      gender:<span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    ...</span><br><span class="line">    ,</span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">'abc'</span>,</span><br><span class="line">      age:<span class="number">10</span>,</span><br><span class="line">      gender:<span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">`方法1: 模拟后台(node/php + mysql)`</span></span><br><span class="line">  <span class="number">1</span>,搭建node服务器/Apache服务器 </span><br><span class="line">  <span class="number">2</span>,开启Mysql服务, 制定数据库,数据表,添加表信息(添加姓名,年龄,性别的值 和 值类型)</span><br><span class="line">  <span class="number">3</span>,使用node或者php语法关联数据库,声明查询sql语句,并执行sql.</span><br><span class="line">  <span class="number">4</span>,将查询db内容处理为json返回</span><br><span class="line">代码量: 前端ajax+模板引擎<span class="number">20</span>行左右 + 后台实现代码<span class="number">40</span>行左右 + 繁琐的数据表设计 + 一条条的添加数据库内容  =  BOOM心态爆炸!!!</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者你可以...</span></span><br><span class="line"><span class="string">`方法2: 完全脱离后台和数据库(mockjs配合vue的拦截器),或者 脱离数据库操作(mockjs简单的node后台)`</span></span><br><span class="line">  <span class="number">1</span>,搭建node服务器</span><br><span class="line">  <span class="number">2</span>,使用mockjs的mock方法制定随机数据</span><br><span class="line">  <span class="number">3</span>,处理为json返回</span><br><span class="line">代码量: 前端ajax+模板引擎<span class="number">20</span>行左右 + node服务响应mock数据<span class="number">11</span>行 = 咦嘿嘿很开心!</span><br><span class="line">代码:</span><br><span class="line">  <span class="keyword">const</span> app = reqire(<span class="string">'express'</span>)</span><br><span class="line">  <span class="keyword">const</span> Mock = <span class="built_in">require</span>(<span class="string">'mockjs'</span>)</span><br><span class="line">  app.get(<span class="string">'/someApi'</span>,(req,res)=&gt;&#123;</span><br><span class="line">    <span class="keyword">var</span> resData = Mock.mock(&#123;</span><br><span class="line">      <span class="string">'status'</span>:<span class="number">200</span>,</span><br><span class="line">      <span class="string">'msg'</span>:<span class="string">'success'</span>,</span><br><span class="line">      <span class="string">'stuData|10-20'</span>:[&#123;</span><br><span class="line">        <span class="string">'name|1-3'</span>:<span class="regexp">/[a-z][A-Z]/</span>,</span><br><span class="line">        <span class="string">'age|+1'</span>:<span class="number">10</span>,</span><br><span class="line">        <span class="string">'gender|1'</span>:<span class="literal">true</span></span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;)</span><br><span class="line">    res.end(<span class="built_in">JSON</span>.stringify(resData))</span><br><span class="line">  &#125;)</span><br><span class="line">  app.listen(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure><hr><hr><h2 id="一-Mockjs怎么用"><a href="#一-Mockjs怎么用" class="headerlink" title="一 Mockjs怎么用?"></a>一 Mockjs怎么用?</h2><h3 id="1-mock-js的使用"><a href="#1-mock-js的使用" class="headerlink" title="1 mock.js的使用"></a>1 mock.js的使用</h3><h5 id="1-1-1-安装并引入mock-js"><a href="#1-1-1-安装并引入mock-js" class="headerlink" title="1.1.1 安装并引入mock.js"></a>1.1.1 安装并引入mock.js</h5><p>  创建一个node服务器–server.js文件<br>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// 创建服务对象</span></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="comment">// 准备数据</span></span><br><span class="line"><span class="keyword">var</span> data = <span class="string">'123'</span></span><br><span class="line"><span class="comment">// 监听路由</span></span><br><span class="line">app.get(<span class="string">'/'</span>, (req, res) =&gt; &#123; </span><br><span class="line">  res.end(data);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 开启服务</span></span><br><span class="line">app.listen(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure></p><h5 id="1-1-2-安装并引入mock-js"><a href="#1-1-2-安装并引入mock-js" class="headerlink" title="1.1.2 安装并引入mock.js"></a>1.1.2 安装并引入mock.js</h5>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install mockjs </span><br><span class="line">或者 </span><br><span class="line">script:src=&quot;http://mockjs.com/dist/mock.js&quot;</span><br></pre></td></tr></table></figure><h5 id="1-1-3-mockjs模块模拟数据"><a href="#1-1-3-mockjs模块模拟数据" class="headerlink" title="1.1.3 mockjs模块模拟数据"></a>1.1.3 mockjs模块模拟数据</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引进express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// 引进mockjs</span></span><br><span class="line"><span class="keyword">const</span> Mock = <span class="built_in">require</span>(<span class="string">'mockjs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 准备服务对象</span></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听路由</span></span><br><span class="line">app.get(<span class="string">'/'</span>, (req, res) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 准备随机数据</span></span><br><span class="line">  <span class="keyword">var</span> data = Mock.mock(&#123;</span><br><span class="line">    <span class="string">'list|1-20'</span>: [&#123;</span><br><span class="line">      <span class="string">'name|3-5'</span>: <span class="regexp">/[a-z][A-Z]/</span>,</span><br><span class="line">      <span class="string">'age|10-15'</span>: <span class="number">15</span>,</span><br><span class="line">      <span class="string">'gender|1'</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;)</span><br><span class="line">  res.end(<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启服务</span></span><br><span class="line">app.listen(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure><h5 id="1-1-4-测试服务"><a href="#1-1-4-测试服务" class="headerlink" title="1.1.4 测试服务"></a>1.1.4 测试服务</h5><p>在terminal窗口中运行命令nodemoon server.js<br>在浏览器中请求127.0.0.1:3000 观察响应体<br><img src="https://live.staticflickr.com/65535/47820482552_f61fbe4644_b.jpg" alt="响应数据"></p><h5 id="1-1-5-使用"><a href="#1-1-5-使用" class="headerlink" title="1.1.5 使用"></a>1.1.5 使用</h5><p>这样在ajax请求相关接口就能返回内容随机,结构固定的JSON数据了</p><hr><h4 id="2-mockjs语法"><a href="#2-mockjs语法" class="headerlink" title="2 mockjs语法"></a>2 <a href="https://github.com/nuysoft/Mock/wiki/Syntax-Specification" target="_blank" rel="noopener">mockjs语法</a></h4><h5 id="2-1-Mock-mock-方法"><a href="#2-1-Mock-mock-方法" class="headerlink" title="2.1 Mock.mock()方法"></a>2.1 <strong>Mock.mock()方法</strong></h5><p>  加对象参数就可以生成响应数据</p><hr><h5 id="2-2-参数对象模板规则"><a href="#2-2-参数对象模板规则" class="headerlink" title="2.2 参数对象模板规则"></a>2.2 参数对象模板规则</h5><ul><li><strong>属性名|生成规则：属性值 name | rule : value</strong>  </li><li><strong>name</strong>: 生成数据的名字字符串</li><li><strong>|</strong>: 一定要加</li><li><strong>rule</strong>: 生成数据的规则<pre><code>|min-max                  生成个数min至max条|count                    生成count条|min-max.dmin-dmax        1-9.2-3  数字值在1-9之间,小数点后保留2-3位  如 2.1   3.74|min-max.dcount           1-9.2     数字值在1-9之间,小数点后保留2位   如2.13  8.54|count.dmin-dmax          10.1-2    整数部分是10,小数点部分1-2位      如10.99   10.1|count.dcount             10.2      整数部分是10,小数点部分2位        如10.11   10.43|+step                    &apos;score|+1&apos;:1,   以value 1为基准,递增1</code></pre></li><li><p><strong>value</strong>: 属性值的规则</p><ul><li><p>字符串</p><pre><code>&apos;name|min-max&apos;: string 通过重复 string 生成一个字符串，min&lt;=重复次数&lt;=max&apos;name|count&apos;: string 通过重复 string 生成一个字符串，重复次数==count。</code></pre></li><li><p>数字</p><pre><code>&apos;name|+1&apos;: number 属性值自动加 1，初始值为 number。&apos;name|min-max&apos;: number    number确定数据类型,生成值在min-max间的整数&apos;name|min-max.dmin-dmax&apos;: numbernumber确定数据类型,生成值在min-max间的小数</code></pre></li><li>布尔<pre><code>&apos;name|1&apos;: boolean随机生成一个布尔值,真假各50%&apos;name|t-f&apos;: true随机生成一个布尔值,真占t/t+f  假占f/t+f</code></pre></li><li><p>对象</p><pre><code>&apos;name|count&apos;: object从属性值 object 中随机选取 count 个属性。&apos;name|min-max&apos;: object从属性值 object 中随机选取 min 到 max 个属性。</code></pre></li><li><p><code>数组</code>  </p><pre><code>&apos;name|1&apos;: array从属性值 array 中随机选取 1 个元素，作为最终值。&apos;name|+1&apos;: array从属性值 array 中顺序选取 1 个元素，作为最终值。&apos;name|min-max&apos;: array通过重复属性值 array 生成一个新数组，重复次数大于等于 min，小于等于 max。&apos;name|count&apos;: array通过重复属性值 array 生成一个新数组，重复次数为 count。var data = mock.mock({  // 将value数组中的项(对象) 重复计算1-10次 添加到新数组返回  &apos;obj|1-10&apos;:[    {      &apos;score|+1&apos;:1    }  ]})//生成 { obj: [ { score: 1 }, { score: 2 }, { score: 3 }, { score: 4 } ] }</code></pre></li><li><p>函数(不用)</p><pre><code>&apos;name&apos;: function执行函数 function，取其返回值作为最终的属性值，函数的上下文为属性 &apos;name&apos; 所在的对象。</code></pre></li><li>正则<pre><code>&apos;name&apos;: regexp根据正则表达式 regexp 反向生成可以匹配它的字符串。用于生成自定义格式的字符串。/[a-z][A-Z][0-9]/  /\w\W\s\S\d\D/  /\d{5,10}/ [\u4e00-\u9fa5]    </code></pre></li></ul></li></ul><hr><h5 id="2-3-Mock-valid-template-data-校验数据-处理请求发送来的数据-如果完全脱离后台就需要该方法"><a href="#2-3-Mock-valid-template-data-校验数据-处理请求发送来的数据-如果完全脱离后台就需要该方法" class="headerlink" title="2.3  Mock.valid( template, data ) 校验数据(处理请求发送来的数据,如果完全脱离后台就需要该方法)"></a>2.3  <strong>Mock.valid( template, data )</strong> 校验数据(处理请求发送来的数据,如果完全脱离后台就需要该方法)</h5><ul><li><code>在vue中可以脱离后台开发(到下个自习说)</code></li><li><strong>template</strong> 必选, 表示数据模板，可以是对象或字符串</li><li><strong>data</strong> 必选, 表示真实数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可以用来做基于mock的ajax请求参数的处理</span></span><br><span class="line"><span class="keyword">var</span> template = &#123;</span><br><span class="line">    name: <span class="string">'value1'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">    name: <span class="string">'value2'</span></span><br><span class="line">&#125;</span><br><span class="line">Mock.valid(template, data)<span class="comment">//返回值是一个校验结果数组</span></span><br><span class="line"><span class="comment">// 如果匹配则 返回空数组</span></span><br><span class="line"><span class="comment">// 如果不匹配 messages属性表示tteamplate和data不匹配的原因</span></span><br></pre></td></tr></table></figure></li></ul><hr><h5 id="2-4-Mock-random工具对象"><a href="#2-4-Mock-random工具对象" class="headerlink" title="2.4 Mock.random工具对象"></a>2.4 <a href="https://github.com/nuysoft/Mock/wiki/Mock.Random" target="_blank" rel="noopener">Mock.random</a>工具对象</h5><ul><li>Mock.Random 是一个工具类，<code>用于生成各种随机数据。不用掌握,用到就点击蓝字查</code></li></ul><hr><h1 id="3-easymock的使用"><a href="#3-easymock的使用" class="headerlink" title="3 easymock的使用"></a>3 easymock的使用</h1><p>  <img src="https://live.staticflickr.com/65535/46956592235_511ee9ef69_b.jpg" alt="easymock"></p><h4 id="3-1-注册"><a href="#3-1-注册" class="headerlink" title="3.1 注册"></a>3.1 <a href="https://www.easy-mock.com/login" target="_blank" rel="noopener"><code>注册</code></a></h4><p>  <img src="https://live.staticflickr.com/65535/47820482622_8dd3d5ca81_b.jpg" alt="个人页面"></p><h4 id="3-2-注意右侧的使用文档右键新窗口打开"><a href="#3-2-注意右侧的使用文档右键新窗口打开" class="headerlink" title="3.2 注意右侧的使用文档右键新窗口打开"></a>3.2 注意右侧的<a href="https://www.easy-mock.com/docs" target="_blank" rel="noopener"><code>使用文档</code></a>右键新窗口打开</h4><p>  <img src="https://live.staticflickr.com/65535/47872713781_9a1fef5bb5_b.jpg" alt="文档"></p><h4 id="3-3-快速开始-创建一个项目-点击左侧演示项目"><a href="#3-3-快速开始-创建一个项目-点击左侧演示项目" class="headerlink" title="3.3 快速开始 - 创建一个项目 点击左侧演示项目"></a>3.3 <code>快速开始 - 创建一个项目</code> 点击左侧演示项目</h4><p>  <img src="https://live.staticflickr.com/65535/47820482752_4b75d8828f.jpg" alt="打开项目"></p><h4 id="3-5-打开项目设置"><a href="#3-5-打开项目设置" class="headerlink" title="3.5 打开项目设置"></a>3.5 <code>打开项目设置</code></h4><p>  <img src="https://live.staticflickr.com/65535/47820482772_6cbaf54576_b.jpg" alt="项目设置"></p><h4 id="3-6-配置接口点击保存-提示更新成功就OK了"><a href="#3-6-配置接口点击保存-提示更新成功就OK了" class="headerlink" title="3.6 配置接口点击保存,提示更新成功就OK了"></a>3.6 <code>配置接口</code>点击保存,提示更新成功就OK了</h4><p>  <img src="https://live.staticflickr.com/65535/47872713871_327401de50_b.jpg" alt="项目设置"></p><h4 id="3-7-接口列表配置"><a href="#3-7-接口列表配置" class="headerlink" title="3.7 接口列表配置"></a>3.7 <code>接口列表配置</code></h4><pre><code>记录当前项目的基本地址  `Base URL,注意要记录自己项目的啊!`https://www.easy-mock.com/mock/5bcd7381617c6c67bc2a20f8/itcast点击3.1左侧项目,进入个人项目,点击创建接口</code></pre><p>  <img src="https://live.staticflickr.com/65535/46956592315_f964c7c926_b.jpg" alt="接口列表位置"></p><h4 id="3-8-接口配置页面-左侧是当前接口返回值设置-右侧接口请求方式-地址等设置"><a href="#3-8-接口配置页面-左侧是当前接口返回值设置-右侧接口请求方式-地址等设置" class="headerlink" title="3.8 接口配置页面: 左侧是当前接口返回值设置,右侧接口请求方式,地址等设置"></a>3.8 <code>接口配置页面</code>: 左侧是当前接口返回值设置,右侧接口请求方式,地址等设置</h4><p>  <img src="https://live.staticflickr.com/65535/47820482842_7388cfb337_b.jpg" alt="接口详情设置">  <img src="https://live.staticflickr.com/65535/47820482822_40e081908d_z.jpg" alt="配置"><br>  将以下代码粘贴至左侧区域,并配置右侧选项</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  &#123;</span><br><span class="line">  <span class="comment">//响应状态码</span></span><br><span class="line">  <span class="string">'status'</span>: <span class="number">200</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// stus 值为数组</span></span><br><span class="line">  <span class="string">'stus|5-10'</span>: [&#123;</span><br><span class="line">    <span class="string">'name|2-4'</span>: <span class="regexp">/[\u4e00-\u9fa5]/</span>, <span class="comment">//生辰任意内容的字符串</span></span><br><span class="line">    <span class="string">'age|+1'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'score|1-100'</span>: <span class="number">100</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-9创建或更新接口后会返回到列表页面-点击预览按钮"><a href="#3-9创建或更新接口后会返回到列表页面-点击预览按钮" class="headerlink" title="3.9创建或更新接口后会返回到列表页面, 点击预览按钮"></a>3.9创建或更新接口后会返回到列表页面, <strong>点击预览按钮</strong></h4><pre><code>如果能够看到响应的数据,就说明本次请求配置是欧克的</code></pre><p>  <img src="https://live.staticflickr.com/65535/47872714081_b134332e26_z.jpg" alt="接口预览-响应"><br>  <img src="https://live.staticflickr.com/65535/47820482912_f5cb51abaa_b.jpg" alt="接口预览-请求"></p><h4 id="3-10使用-POSTMan测试接口"><a href="#3-10使用-POSTMan测试接口" class="headerlink" title="3.10使用 POSTMan测试接口"></a>3.10使用 <strong>POSTMan</strong>测试接口</h4><pre><code>`拼接地址注意: 要使用easymock项目的BaseUrl 和 测试接口的地址&quot;test&quot;拼接`</code></pre><p>  <img src="https://live.staticflickr.com/65535/47820482962_0f876e5c02_z.jpg" alt="接口预览-请求"></p><h4 id="3-11欧克-现在你可以脱离数据库及后台的配置发送ajax请求直接拿数据啦"><a href="#3-11欧克-现在你可以脱离数据库及后台的配置发送ajax请求直接拿数据啦" class="headerlink" title="3.11欧克,现在你可以脱离数据库及后台的配置发送ajax请求直接拿数据啦!"></a>3.11欧克,现在你可以脱离数据库及后台的配置发送ajax请求直接拿数据啦!</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mock和easymock&quot;&gt;&lt;a href=&quot;#mock和easymock&quot; class=&quot;headerlink&quot; title=&quot;mock和easymock&quot;&gt;&lt;/a&gt;mock和easymock&lt;/h1&gt;&lt;h3 id=&quot;WHY-mock-js&quot;&gt;&lt;a href=
      
    
    </summary>
    
      <category term="扩展阅读" scheme="/categories/%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="扩展阅读" scheme="/tags/%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>JS遍历对象、数组总结</title>
    <link href="/2019/05/16/JS%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1%E3%80%81%E6%95%B0%E7%BB%84%E6%80%BB%E7%BB%93/"/>
    <id>/2019/05/16/JS遍历对象、数组总结/</id>
    <published>2019-05-16T08:50:56.826Z</published>
    <updated>2019-05-18T05:28:13.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><h2 id="使用for-in-遍历"><a href="#使用for-in-遍历" class="headerlink" title="使用for..in..遍历"></a>使用for..in..遍历</h2><blockquote><p>循环遍历对象自身的和继承的可枚举属性(不含Symbol属性)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="string">'0'</span>:<span class="string">'a'</span>,<span class="string">'1'</span>:<span class="string">'b'</span>,<span class="string">'2'</span>:<span class="string">'c'</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(i,<span class="string">":"</span>,obj[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用Object-keys-遍历"><a href="#使用Object-keys-遍历" class="headerlink" title="使用Object.keys()遍历"></a>使用Object.keys()遍历</h2><blockquote><p>返回一个数组,包括对象自身的(不含继承的)所有可枚举属性(不含Symbol属性)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="string">'0'</span>:<span class="string">'a'</span>,<span class="string">'1'</span>:<span class="string">'b'</span>,<span class="string">'2'</span>:<span class="string">'c'</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">Object</span>.keys(obj).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(key,obj[key]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用Object-getOwnPropertyNames-obj-遍历"><a href="#使用Object-getOwnPropertyNames-obj-遍历" class="headerlink" title="使用Object.getOwnPropertyNames(obj)遍历"></a>使用Object.getOwnPropertyNames(obj)遍历</h2><blockquote><p>返回一个数组,包含对象自身的所有属性(不含Symbol属性,但是包括不可枚举属性)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="string">'0'</span>:<span class="string">'a'</span>,<span class="string">'1'</span>:<span class="string">'b'</span>,<span class="string">'2'</span>:<span class="string">'c'</span>&#125;;</span><br><span class="line"><span class="built_in">Object</span>.getOwnPropertyNames(obj).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key,obj[key]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用Reflect-ownKeys-obj-遍历"><a href="#使用Reflect-ownKeys-obj-遍历" class="headerlink" title="使用Reflect.ownKeys(obj)遍历"></a>使用Reflect.ownKeys(obj)遍历</h2><blockquote><p>返回一个数组,包含对象自身的所有属性,不管属性名是Symbol或字符串,也不管是否可枚举</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="string">'0'</span>:<span class="string">'a'</span>,<span class="string">'1'</span>:<span class="string">'b'</span>,<span class="string">'2'</span>:<span class="string">'c'</span>&#125;;</span><br><span class="line"><span class="built_in">Reflect</span>.ownKeys(obj).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(key,obj[key]);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="forEach-遍历"><a href="#forEach-遍历" class="headerlink" title="forEach - 遍历"></a>forEach - 遍历</h2><ol><li>遍历数组全部元素，利用回调函数对数组进行操作</li><li>自动遍历数组.length次数，且无法break中途跳出循环</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">arr.forEach(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;el&#125;</span>, <span class="subst">$&#123;index&#125;</span>,`</span>, arr)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line"><span class="comment">// 1, 0, [ 1, 2, 3, 4, 5 ]</span></span><br><span class="line"><span class="comment">// 2, 1, [ 1, 2, 3, 4, 5 ]</span></span><br><span class="line"><span class="comment">// 3, 2, [ 1, 2, 3, 4, 5 ]</span></span><br></pre></td></tr></table></figure><h2 id="map-遍历、创建"><a href="#map-遍历、创建" class="headerlink" title="map - 遍历、创建"></a>map - 遍历、创建</h2><ol><li>创建新数组</li><li>不改变原数组</li><li>输出的是return什么就输出什么新数组</li><li>回调函数参数，item(数组元素)、index(序列)、arr(数组本身)</li><li>使用return操作输出，会循环数组每一项，并在回调函数中操作</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> newArr = arr.map(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> el * <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newArr) <span class="comment">// [ 2, 4, 6 ]</span></span><br><span class="line"><span class="comment">// 如果没有返回值将会返回undefined</span></span><br><span class="line"><span class="keyword">const</span> newArr = arr.map(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// return el * 2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newArr) <span class="comment">// [ undefined, undefined, undefined ]</span></span><br></pre></td></tr></table></figure><h2 id="filter-筛选、创建"><a href="#filter-筛选、创建" class="headerlink" title="filter - 筛选、创建"></a>filter - 筛选、创建</h2><ol><li>创建新数组</li><li>不改变原数组</li><li>输出的是判断为true的数组元素形成的新数组</li><li>回调函数参数，item(数组元素)、index(序列)、arr(数组本身)</li><li>使用return操作输出，会循环数组每一项，并在回调函数中操作</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> newArr = arr.filter(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> el &gt; <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newArr) <span class="comment">// [ 3, 4, 5 ]</span></span><br></pre></td></tr></table></figure><h2 id="includes-筛选"><a href="#includes-筛选" class="headerlink" title="includes - 筛选"></a>includes - 筛选</h2><p>只是判断数组是否含有某值，不用return，不用回调函数，输出一个true或false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] ;</span><br><span class="line"><span class="keyword">var</span> new1 = arr.includes(<span class="number">5</span>); </span><br><span class="line"><span class="built_in">console</span>.log(new1) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="find-筛选"><a href="#find-筛选" class="headerlink" title="find - 筛选"></a>find - 筛选</h2><ol><li>不创建新数组</li><li>不改变原数组</li><li>输出的是一旦判断为true则跳出循环输出符合条件的数组元素</li><li>回调函数参数，item(数组元素)、index(序列)、arr(数组本身)</li><li>使用return操作输出，会循环数组每一项，并在回调函数中操作</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> result = arr.find(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> el &gt; <span class="number">3</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result) <span class="comment">// 4</span></span><br></pre></td></tr></table></figure><h2 id="findIndex-筛选"><a href="#findIndex-筛选" class="headerlink" title="findIndex  - 筛选"></a>findIndex  - 筛选</h2><ol><li>不创建新数组</li><li>不改变原数组</li><li>输出的是一旦判断为true则跳出循环输出符合条件的数组元素序列</li><li>回调函数参数，item(数组元素)、index(序列)、arr(数组本身)</li><li>使用return操作输出，会循环数组每一项，并在回调函数中操作</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> index = arr.findIndex(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> el &gt; <span class="number">3</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(index) <span class="comment">// 4</span></span><br></pre></td></tr></table></figure><h2 id="some-判断"><a href="#some-判断" class="headerlink" title="some - 判断"></a>some - 判断</h2><ol><li>不创建新数组</li><li>不改变原数组</li><li>输出的是判断为true则马上跳出循环并return成true</li><li>回调函数参数，item(数组元素)、index(序列)、arr(数组本身)</li><li>使用return操作输出，会循环数组每一项，并在回调函数中操作</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> result = arr.some(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> el &gt; <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="every-判断"><a href="#every-判断" class="headerlink" title="every - 判断"></a>every - 判断</h2><ol><li>不创建新数组</li><li>不改变原数组</li><li>输出的是判断为false则马上跳出循环并return成false</li><li>回调函数参数，item(数组元素)、index(序列)、arr(数组本身)</li><li>使用return操作输出，会循环数组每一项，并在回调函数中操作</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> result = arr.every(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> el &gt; <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h2 id="reduce-reduceRight"><a href="#reduce-reduceRight" class="headerlink" title="reduce / reduceRight"></a>reduce / reduceRight</h2><p>reduce / reduceRight比上面的方法复杂一点，其语法如下</p><blockquote><p>array.reduce(callback,[initialValue])</p></blockquote><p><code>callback</code>接收四个参数</p><ul><li><code>accumulator</code> 上一次调用回调返回的值，或者是提供的初始值（initialValue）</li><li><code>currentValue</code> 数组中正在处理的元素</li><li><code>currentIndex</code> 数组中正在处理的元素索引，如果提供了initialValue ，从0开始；否则从1开始。</li><li><code>array</code> 数组对象本身<br>reduce / reduceRight 方法中，第二个参数（<code>initialValue</code>）是可选的；<br>我们先看一个例子：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">const</span> result = arr.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> a + b</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result) <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p>接下来分析reduce是如何运行的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">const</span> result = arr.reduce(<span class="function">(<span class="params">accumulator, currentValue, currentIndex, array</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(accumulator, currentValue, currentIndex, array)</span><br><span class="line">  <span class="keyword">return</span> accumulator + currentValue</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result)</span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"><span class="comment">// 1 2 1 [ 1, 2, 3, 4 ]</span></span><br><span class="line"><span class="comment">// 3 3 2 [ 1, 2, 3, 4 ]</span></span><br><span class="line"><span class="comment">// 6 4 3 [ 1, 2, 3, 4 ]</span></span><br><span class="line"><span class="comment">// 10</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对象&quot;&gt;&lt;a href=&quot;#对象&quot; class=&quot;headerlink&quot; title=&quot;对象&quot;&gt;&lt;/a&gt;对象&lt;/h1&gt;&lt;h2 id=&quot;使用for-in-遍历&quot;&gt;&lt;a href=&quot;#使用for-in-遍历&quot; class=&quot;headerlink&quot; title=&quot;使用f
      
    
    </summary>
    
      <category term="JavaScript" scheme="/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS获取客户端真实IP</title>
    <link href="/2019/05/16/JS%E8%8E%B7%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9C%9F%E5%AE%9EIP/"/>
    <id>/2019/05/16/JS获取客户端真实IP/</id>
    <published>2019-05-16T08:50:56.779Z</published>
    <updated>2019-05-15T07:05:18.876Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方法一：（所有的平台及浏览器）"><a href="#方法一：（所有的平台及浏览器）" class="headerlink" title="方法一：（所有的平台及浏览器）"></a>方法一：（所有的平台及浏览器）</h2><p>使用搜狐接口：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"http://pv.sohu.com/cityjson?ie=utf-8"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="built_in">document</span>.write(returnCitySN[<span class="string">"cip"</span>]+<span class="string">','</span>+returnCitySN[<span class="string">"cname"</span>])</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方法二：（所有的平台及浏览器）"><a href="#方法二：（所有的平台及浏览器）" class="headerlink" title="方法二：（所有的平台及浏览器）"></a>方法二：（所有的平台及浏览器）</h2><p>使用新浪接口：(我测试过，此方法好像不行。访问网站也不能访问了。)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"http://counter.sina.com.cn/ip/"</span> charset=<span class="string">"gb2312"</span>&gt;&lt;/script&gt;       &lt;!--获取接口数据，注意charset --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">"IP地址："</span>+ILData[<span class="number">0</span>]+<span class="string">"&lt;br /&gt;"</span>);             <span class="comment">//输出接口数据中的IP地址</span></span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">"地址类型："</span>+ILData[<span class="number">1</span>]+<span class="string">"&lt;br /&gt;"</span>);         <span class="comment">//输出接口数据中的IP地址的类型</span></span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">"地址类型："</span>+ILData[<span class="number">2</span>]+<span class="string">"&lt;br /&gt;"</span>);         <span class="comment">//输出接口数据中的IP地址的省市</span></span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">"地址类型："</span>+ILData[<span class="number">3</span>]+<span class="string">"&lt;br /&gt;"</span>);         <span class="comment">//输出接口数据中的IP地址的</span></span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">"地址类型："</span>+ILData[<span class="number">4</span>]+<span class="string">"&lt;br /&gt;"</span>);         <span class="comment">//输出接口数据中的IP地址的运营商</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h2><p>个人Robert Hashemian写的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">"JavaScript"</span> src=<span class="string">"http://www.hashemian.com/js/visitorIP.js.php"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script language=<span class="string">"JavaScript"</span>&gt;</span><br><span class="line">    VIH_BackColor = <span class="string">"palegreen"</span>;</span><br><span class="line">    VIH_ForeColor = <span class="string">"navy"</span>;</span><br><span class="line">    VIH_FontPix = <span class="string">"16"</span>;</span><br><span class="line">    VIH_DisplayFormat = <span class="string">"You are visiting from:&lt;br&gt;IP Address: %%IP%%&lt;br&gt;Host: %%HOST%%"</span>;</span><br><span class="line">    VIH_DisplayOnPage = <span class="string">"yes"</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方法四："><a href="#方法四：" class="headerlink" title="方法四："></a>方法四：</h2><blockquote><p>（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）</p></blockquote><p>利用ActiveXObject控件，ie浏览器里要开启此控件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&quot;JavaScript&quot;&gt;</span><br><span class="line">function GetLocalIPAddr()&#123; var oSetting = null; var ip = null; try&#123; oSetting = new ActiveXObject(&quot;rcbdyctl.Setting&quot;); ip = oSetting.GetIPAddress; if (ip.length == 0)&#123; return &quot;没有连接到Internet&quot;; &#125; oSetting = null; &#125;catch(e)&#123; return ip; &#125; return ip; &#125; document.write(GetLocalIPAddr()+&quot;&lt;br/&gt;&quot;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;方法一：（所有的平台及浏览器）&quot;&gt;&lt;a href=&quot;#方法一：（所有的平台及浏览器）&quot; class=&quot;headerlink&quot; title=&quot;方法一：（所有的平台及浏览器）&quot;&gt;&lt;/a&gt;方法一：（所有的平台及浏览器）&lt;/h2&gt;&lt;p&gt;使用搜狐接口：&lt;/p&gt;
&lt;figur
      
    
    </summary>
    
      <category term="JavaScript" scheme="/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>js实现表格内容无缝滚动</title>
    <link href="/2019/05/16/js%E5%AE%9E%E7%8E%B0%E8%A1%A8%E6%A0%BC%E5%86%85%E5%AE%B9%E6%97%A0%E7%BC%9D%E6%BB%9A%E5%8A%A8/"/>
    <id>/2019/05/16/js实现表格内容无缝滚动/</id>
    <published>2019-05-16T08:50:56.779Z</published>
    <updated>2019-05-14T07:43:23.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        table &#123;</span></span><br><span class="line"><span class="undefined">            width: 500px;</span></span><br><span class="line"><span class="undefined">            border: 1px solid gray;</span></span><br><span class="line"><span class="undefined">            border-collapse: collapse;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        th,</span></span><br><span class="line"><span class="undefined">        td &#123;</span></span><br><span class="line"><span class="undefined">            line-height: 35px;</span></span><br><span class="line"><span class="undefined">            border: 1px solid gray;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            width: 120px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .scroll-box &#123;</span></span><br><span class="line"><span class="undefined">            height: 195px;</span></span><br><span class="line"><span class="undefined">            width: 500px;</span></span><br><span class="line"><span class="undefined">            overflow: hidden;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .tab-scroll &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 0;</span></span><br><span class="line"><span class="undefined">            top: 0;</span></span><br><span class="line"><span class="undefined">            transition: all 1s;</span></span><br><span class="line"><span class="undefined">            border-top: none;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .tab-scroll td &#123;</span></span><br><span class="line"><span class="undefined">            border-top: none;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"scroll-box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"tab-scroll"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1002<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1003<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1004<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1005<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>小兰<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1006<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1007<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1008<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1009<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>小兰<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//  2.实现表格滚动(每次滚动一行)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> scrollTab = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'tab-scroll'</span>)[<span class="number">0</span>]; <span class="comment">//滚动的表格</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tbody = scrollTab.getElementsByTagName(<span class="string">'tbody'</span>)[<span class="number">0</span>]; <span class="comment">//tbody</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> speed = scrollTab.getElementsByTagName(<span class="string">'td'</span>)[<span class="number">0</span>].offsetHeight + <span class="number">1</span>; <span class="comment">//行高(滚动速度) 加上表格边框</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> count = <span class="number">0</span>; <span class="comment">//要追加到表格底部的行索引 </span></span></span><br><span class="line"><span class="javascript">        setInterval(scrollTop, <span class="number">1000</span>); <span class="comment">//每隔1秒滚动一次</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//实现表格向上滚动</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">scrollTop</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> t = scrollTab.offsetTop; <span class="comment">//top值</span></span></span><br><span class="line"><span class="javascript">            scrollTab.style.top = t - speed + <span class="string">'px'</span>; <span class="comment">//滚动</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> trs = tbody.getElementsByTagName(<span class="string">'tr'</span>); <span class="comment">//每次都重新取出所有内容行</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> newTr = trs[count].cloneNode(<span class="literal">true</span>); <span class="comment">//复制行，得到新的行对象</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//将滚动的行追加到表格底部</span></span></span><br><span class="line"><span class="undefined">            tbody.appendChild(newTr);</span></span><br><span class="line"><span class="undefined">            count++;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;直接上代码&quot;&gt;&lt;a href=&quot;#直接上代码&quot; class=&quot;headerlink&quot; title=&quot;直接上代码&quot;&gt;&lt;/a&gt;直接上代码&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="JavaScript" scheme="/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>element-ui的table表格不对齐问题</title>
    <link href="/2019/05/16/element-ui%E7%9A%84table%E8%A1%A8%E6%A0%BC%E4%B8%8D%E5%AF%B9%E9%BD%90%E9%97%AE%E9%A2%98/"/>
    <id>/2019/05/16/element-ui的table表格不对齐问题/</id>
    <published>2019-05-16T08:50:56.733Z</published>
    <updated>2019-05-18T05:08:34.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h1><p><img src="https://live.staticflickr.com/65535/32928640937_1dc4bcb136_b.jpg" alt></p><h1 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h1><p>将以下样式代码添加到index.html、或app.vue中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> <span class="selector-class">.el-table</span> <span class="selector-tag">colgroup</span><span class="selector-class">.gutter</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题：&quot;&gt;&lt;a href=&quot;#问题：&quot; class=&quot;headerlink&quot; title=&quot;问题：&quot;&gt;&lt;/a&gt;问题：&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://live.staticflickr.com/65535/32928640937_1dc4bcb1
      
    
    </summary>
    
      <category term="Vue" scheme="/categories/Vue/"/>
    
    
      <category term="Vue" scheme="/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue - element-ui</title>
    <link href="/2019/05/16/axios%E5%A4%84%E7%90%86%E5%A4%9A%E4%B8%AAbaseURL/"/>
    <id>/2019/05/16/axios处理多个baseURL/</id>
    <published>2019-05-16T08:50:56.701Z</published>
    <updated>2019-05-09T03:26:14.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="element-ui"><a href="#element-ui" class="headerlink" title="element-ui"></a>element-ui</h2><p>本身是一个Vue组件库，由<code>饿了么</code>团队进行包装。</p><p>桌面组件库（PC）</p><p><a href="http://element-cn.eleme.io/#/zh-CN" target="_blank" rel="noopener">官网</a></p><p><strong>其他常用组件库</strong></p><p><a href="https://baijiahao.baidu.com/s?id=1590479471360943398&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">连接</a></p><ul><li>Vuetify</li><li>Vue Material</li><li>Keen UI</li><li>Buefy</li><li>Bootstrap-Vue</li><li>AT-UI</li><li>Fish-UI</li><li>Quasar</li><li>Muse UI</li><li>Vux</li></ul><p>###hello world</p><p><strong>安装</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i element-ui -S</span><br></pre></td></tr></table></figure><p><strong>解决字体文件解析</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用到了**格式的字体文件，需要额外配置loader</span></span><br><span class="line"><span class="comment">//该loader为：url-loader</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">test</span>:<span class="regexp">/\.(eot|svg|ttf|woff|woff2)$/</span>, <span class="attr">use</span>:<span class="string">'url-loader'</span>&#125;,</span><br></pre></td></tr></table></figure><p><strong>基础使用</strong> <code>完整引入</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>基础使用</strong> <code>按需引入</code></p><p><a href="http://element-cn.eleme.io/#/zh-CN/component/quickstart" target="_blank" rel="noopener">参考</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>页面中的标签照抄代码就行，懒得写了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;element-ui&quot;&gt;&lt;a href=&quot;#element-ui&quot; class=&quot;headerlink&quot; title=&quot;element-ui&quot;&gt;&lt;/a&gt;element-ui&lt;/h2&gt;&lt;p&gt;本身是一个Vue组件库，由&lt;code&gt;饿了么&lt;/code&gt;团队进行包装。&lt;/
      
    
    </summary>
    
      <category term="Vue" scheme="/categories/Vue/"/>
    
    
      <category term="Vue" scheme="/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>jQuery - 基础</title>
    <link href="/2019/05/16/2.2.1.jQuery%20-%20%E5%9F%BA%E7%A1%80/"/>
    <id>/2019/05/16/2.2.1.jQuery - 基础/</id>
    <published>2019-05-16T08:50:56.670Z</published>
    <updated>2019-05-16T04:21:12.446Z</updated>
    
    <content type="html"><![CDATA[<p><code>隐式迭代、链式编程</code></p><h1 id="jQuery对象"><a href="#jQuery对象" class="headerlink" title="jQuery对象"></a>jQuery对象</h1><table><thead><tr><th>英文</th><th>描述</th></tr></thead><tbody><tr><td>$(‘选择器’);</td><td>$是一个函数   var $btn = $(‘#btn’);</td></tr><tr><td>jQuery(‘选择器’);</td><td>var $btn =   jQuery(‘#btn’)</td></tr><tr><td>$(dom对象);</td><td>DOM转jq对象</td></tr><tr><td>var div =   $(‘div’)[0];</td><td>jq转DOM对象</td></tr></tbody></table><p>通过$符号调用所返回的jQuery对象的本质就是一个集合（==伪数组==）→   jQuery对象      //  通过index()可获取一组标签中的索引</p><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>$(‘#id’)</td><td>ID选择器</td><td>获取指定ID的元素</td></tr><tr><td>$(‘.class’)</td><td>类选择器</td><td>获取同一类class的元素</td></tr><tr><td>$(‘div’)</td><td>标签选择器</td><td>获取同一类标签的所有元素</td></tr><tr><td>$(‘div,p,li’)</td><td>并集选择器</td><td>使用逗号分隔，只要符合条件之一就可。</td></tr><tr><td>$(‘div.redClass’)</td><td>交集选择器</td><td>获取class为redClass的div元素</td></tr><tr><td>$(‘ul &gt;   li’)</td><td>子代选择器</td><td>使用&gt;号，获取儿子层级的元素，注意，并不会获取孙子层级的元素</td></tr><tr><td>$(‘ul li’)</td><td>后代选择器</td><td>使用空格，代表后代选择器，获取ul下的所有li元素，包括孙子等</td></tr><tr><td>$(‘li:eq(2)’).css(‘color’,   ‘red’)</td><td>:eq(index)</td><td>获取到的li元素中，选择索引号为2的元素，索引号index从0开始。</td></tr><tr><td>$(‘li:odd’).css(‘color’,   ‘red’)</td><td>:odd</td><td>获取到的li元素中，选择索引号为奇数的元素</td></tr><tr><td>$(‘li:even’).css(‘color’,   ‘red’)</td><td>:even</td><td>获取到的li元素中，选择索引号为偶数的元素</td></tr><tr><td>children(selector)</td><td>(‘ul’).children(‘li’)</td><td>相当于\$(‘ull &gt;   i’)，子类选择器</td></tr><tr><td>find(selector)</td><td>(‘ul’).find(‘li’)</td><td>相当于\$(‘ul li’),后代选择器</td></tr><tr><td>siblings(selector)</td><td>$(‘#first’).siblings(‘li’)</td><td>查找兄弟节点，不包括自己本身。</td></tr><tr><td>parent()</td><td>$(‘#first’).parent()</td><td>查找父亲</td></tr><tr><td>eq(index)</td><td>$(‘li’).eq(2)</td><td>相当于$(‘li:eq(2)’),index从0开始</td></tr><tr><td>end()</td><td></td><td>找上一级的jq对象</td></tr><tr><td>next()</td><td>$(‘li’).next()</td><td>找下一个兄弟</td></tr><tr><td>nextAll()</td><td></td><td></td></tr><tr><td>prev()</td><td>$(‘li’).prev()</td><td>找上一次兄弟</td></tr><tr><td>prevAll()</td><td></td></tr></tbody></table><h1 id="事件相关"><a href="#事件相关" class="headerlink" title="事件相关"></a>事件相关</h1><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>jQuery对象.事件名(事件处理程序);</td><td>简单方式</td><td>$(‘button’).click(function(){     alert(‘nihao’)   });</td></tr><tr><td>jQuery对象.on(‘事件名’,事件处理程序);</td><td>on方式注册</td><td></td></tr><tr><td>jQuery对象.off(‘click’,事件处理程序名称)</td><td>解绑简单的事件</td><td></td></tr><tr><td>jQuery对象.off(‘click’,‘选择器’,事件处理程序名称)</td><td>解绑事件委托注册的事件</td><td></td></tr><tr><td>jQuery对象.trigger(‘事件名’);</td><td>触发事件</td><td>通常用于定时器，每隔<em>秒  触发一次某个元素的</em>事件</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 事件委托  jQuery对象.on('事件名','选择器',事件处理程序);</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">'ul'</span>).on(<span class="string">'click'</span>, <span class="string">'li'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// this 是谁？ 当前点击的li</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    alert($(<span class="keyword">this</span>).text());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="样式、属性、类名、内容控制"><a href="#样式、属性、类名、内容控制" class="headerlink" title="样式、属性、类名、内容控制"></a>样式、属性、类名、内容控制</h1><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>jQuery对象.css(name,value);</td><td></td><td>$(‘div’).css(‘width’,500);</td></tr><tr><td>jQuery对象.css({ name:value, name:value});</td><td></td><td>$(‘div’).css({      border:’10px solid blue’,      background:’pink’,    });</td></tr><tr><td>jQuery对象.css(‘样式属性名’);</td><td></td><td>var h = $(‘div’).css(‘height’);</td></tr><tr><td>jQuery对象.addClass(‘类名’);</td><td>添加类名</td><td></td></tr><tr><td>jQuery对象.removeClass(‘类名’);</td><td>移除类名</td><td></td></tr><tr><td>jQuery对象.toggleClass(‘类名’);</td><td>类名切换</td><td></td></tr><tr><td>jQuery对象.hasClass(‘类名’);</td><td>检测类名是否存在</td><td>返回布尔值</td></tr><tr><td>jQuery对象.attr(name,value)</td><td>设置标签的属性</td><td>$(“img”).attr(“width”,”180”);</td></tr><tr><td>jQuery对象.attr(name);</td><td>获取标签属性值</td><td></td></tr><tr><td>removeAttr(name);</td><td>移除标签的属性</td><td></td></tr><tr><td>$(‘input’).prop(‘属性名’);</td><td>prop方法操作属性</td><td>针对：selected、checked、disabled</td></tr><tr><td>jQuery对象.text();</td><td>操作标签内部的文本</td><td></td></tr><tr><td>jQuery对象.html();</td><td>操作标签内部的所有内容</td><td></td></tr><tr><td>jQuery对象.val();</td><td>操作表单元素的内容</td></tr></tbody></table><h1 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h1><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>jQuery对象.show(speed,easing,fn);</td><td>显示</td><td>-   参数speed，动画时长，数字→毫秒      - easing，运动的方式，默认swing缓冲,linear匀速</td></tr><tr><td>jQuery对象.hide(speed,easing,fn);</td><td>隐藏</td><td></td></tr><tr><td>jQuery对象.toggle(speed,easing,fn);</td><td>切换</td><td></td></tr><tr><td>jQuery对象.slideDown(speed,easing,fn);</td><td>下拉 卷曲-显示</td><td></td></tr><tr><td>jQuery对象.slideUp(speed,easing,fn);</td><td>下拉 卷曲-隐藏</td><td></td></tr><tr><td>jQuery对象.slideToggle(speed,easing,fn);</td><td>下拉 卷曲-切换</td><td></td></tr><tr><td>jQuery对象.fadeIn(speed,easing,fn);</td><td>淡入淡出</td><td></td></tr><tr><td>jQuery对象.fadeOut(speed,easing,fn);</td><td>淡入淡出</td><td></td></tr><tr><td>jQuery对象.fadeToggle(speed,easing,fn);</td><td>淡入淡出</td><td></td></tr><tr><td>animate(params,[speed],[easing],[fn])</td><td>自定义动画</td><td>animage({   样式属性名:目标值, 样式属性名:目标值},1000)</td></tr><tr><td>jQuery对象.stop(clearQueue,jumpToEnd);</td><td>停止动画</td><td>2个值 是布尔值</td></tr></tbody></table><h1 id="标签元素控制"><a href="#标签元素控制" class="headerlink" title="标签元素控制"></a>标签元素控制</h1><table><thead><tr><th>动态创建元素</th><th>中文</th></tr></thead><tbody><tr><td>$(‘<li></li>‘)</td><td>创建元素</td></tr><tr><td>新创建jQuery对象.appendTo(‘父选择器’、父对象);</td><td>在最后追加元素</td></tr><tr><td>父元素jQuery对象.apeend(新创建的jQuery对象);</td><td></td></tr><tr><td>新创建jQuery对象.prependTo(‘父元素选择器’);</td><td>在前面追加元素</td></tr><tr><td>父元素jQuery对象.prepend(新创建的jQuery对象);</td><td></td></tr><tr><td>jQuery对象.remove()</td><td>删除元素   删谁就让谁调用这个方法</td></tr><tr><td>jQuery对象.empty()</td><td>清空元素   清空内部的所有元素及元素相关的事件</td></tr><tr><td>jQuery对象.html(‘’);</td><td>清空元素   不推荐使用，该方式不会清空事件</td></tr><tr><td>jQuery对象.clone(布尔值);    返回克隆好的元素</td><td>参数：默认是false,表示仅仅克隆内容。   true，克隆内容和事件</td></tr><tr><td>$(“选择器”).before(html);</td><td></td></tr><tr><td>$(“选择器”).after(html)</td></tr></tbody></table><table><thead><tr><th>操作元素的尺寸</th><th>中文</th></tr></thead><tbody><tr><td>jQuery对象.width(数字);</td><td>仅内容部分</td></tr><tr><td>jQuery对象.height(数字);</td><td>仅内容部分</td></tr><tr><td>jQuery对象.innerWidth(数字);</td><td>内容部分 + padding</td></tr><tr><td>jQuery对象.innerHeight(数字);</td><td>内容部分 + padding</td></tr><tr><td>jQuery对象.outerWidth(数字);</td><td>内容部分 + padding +   border   .outerWidth(true) 额外获取margin</td></tr><tr><td>jQuery对象.outerHeight(数字);</td><td>内容部分 + padding +   border</td></tr></tbody></table><table><thead><tr><th>操作元素的位置</th><th>中文</th></tr></thead><tbody><tr><td>jQuery对象.offset()</td><td>获取的元素的位置，永远参照文档,返回一个对象，对象中包含了元素的位置</td></tr><tr><td>jQuery对象.position();</td><td>返回的一个对象，对象中包含了元素的位置，参照最近的定位元素（和定位有关系）</td></tr><tr><td>jQuery对象.scrollTop();</td><td>$(window).scrollTop()   操作卷去的页面间距</td></tr></tbody></table><h1 id="JQ-ajax"><a href="#JQ-ajax" class="headerlink" title="JQ - ajax"></a>JQ - ajax</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123; <span class="attr">key</span>:value &#125;）</span><br><span class="line">       </span><br><span class="line">url：请求地址</span><br><span class="line">type：请求方法，默认为 <span class="keyword">get</span></span><br><span class="line">dataType：服务端响应数据类型</span><br><span class="line">contentType：请求体内容类型，默认 application/x-www-form-urlencoded</span><br><span class="line">data：需要传递到服务端的数据，如果 GET 则通过 URL 传递，如果 POST 则通过请求体传递</span><br><span class="line">timeout：请求超时时间</span><br><span class="line">beforeSend：请求发起之前触发</span><br><span class="line">success：请求成功之后触发（响应状态码 200）</span><br><span class="line">error：请求失败触发</span><br><span class="line">complete：请求完成触发（不管成功与否）</span><br><span class="line">async：false   （将异步请求改为同步）</span><br><span class="line"></span><br><span class="line">//或者：</span><br><span class="line">$.<span class="keyword">get</span>(url, data, callback)</span><br><span class="line">$.post(url, data, callback)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">"/greet"</span>,</span><br><span class="line">    data: &#123;<span class="attr">name</span>: <span class="string">'jenny'</span>&#125;,</span><br><span class="line">    type: <span class="string">"POST"</span>,</span><br><span class="line">    dataType: <span class="string">"json"</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// data = jQuery.parseJSON(data);  //dataType指明了返回数据为json类型，故不需要再反序列化</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="请求头设置"><a href="#请求头设置" class="headerlink" title="请求头设置"></a>请求头设置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个是全局的，所有的ajax请求都会加上这个请求头</span></span><br><span class="line"> $(<span class="built_in">document</span>).ajaxSend(<span class="function"><span class="keyword">function</span> (<span class="params">event, xhr</span>) </span>&#123;</span><br><span class="line">            xhr.setRequestHeader(<span class="string">"custom-header"</span>, <span class="string">"custom-info"</span>) ;  <span class="comment">// 增加一个自定义请求头</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 局部设置请求头</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">  headers:&#123;</span><br><span class="line">   <span class="string">"Referer"</span>: <span class="string">"http://www.baidu.com"</span> <span class="comment">// 有些浏览器不允许修改该请求头       </span></span><br><span class="line">   ,<span class="string">"User-Agent"</span>: <span class="string">"newLine"</span> <span class="comment">// 有些浏览器不允许修改该请求头        </span></span><br><span class="line">   ,<span class="string">"X-Power"</span>: <span class="string">"newLine"</span>       </span><br><span class="line">   ,<span class="string">"Accept-Language"</span>: <span class="string">"en-US"</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;) ;</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><table><thead><tr><th>英文</th><th>描述</th></tr></thead><tbody><tr><td>入口函数</td><td>$(function(){ // 获取元素});</td></tr><tr><td>$(document).ready(function(){   // 获取元素});</td></tr></tbody></table><p>window.onload会等页面全部加载完执行 只能存在一个，而jq可以存在多个，dpm树结束后就运行    </p><p>“这俩都是在jq原型中创建一个方法，让jq对象调用（如果用上了this  this代码调用者）<br>$.prototype.createTable = function (shuju) {}<br>$.fn.createTable = function (shuju) {}”    </p><table><thead><tr><th>英文</th><th>描述</th></tr></thead><tbody><tr><td>事件对象.clientX/Y   参照浏览器</td><td>事件对象.preventDefault();   阻止默认行为</td></tr><tr><td>事件对象.pageX/Y   参照文档</td><td>事件对象.stopPropagation();   阻止事件冒泡</td></tr><tr><td>事件对象.offsetX/Y   参照事件源</td><td>事件对象.keyCode   返回键码数字</td></tr><tr><td>事件对象.target;</td><td>事件对象.alt/shift/ctrlKey   返回是布尔值。 检测是否按下（true）</td></tr></tbody></table><table><thead><tr><th>英文</th><th>描述</th><th></th><th></th></tr></thead><tbody><tr><td>多库共存</td><td>jq对象 =   jQuery.noConflict();</td><td>不 冲突</td><td>释放$，改成自定义的对象      var $1 = jQuery.noConflict();</td></tr><tr><td>深/浅拷贝</td><td>$.extend([true],obj1,obj2)</td><td>对obj1进行 深拷贝、浅拷贝</td></tr></tbody></table><table><thead><tr><th>英文</th><th>描述</th></tr></thead><tbody><tr><td>*.data()</td><td>拿标签中的data-* 自定义属性的值</td></tr></tbody></table><table><thead><tr><th>英文</th><th>描述</th></tr></thead><tbody><tr><td>$(selector).load(function)</td><td>当指定的元素（及子元素）已加载时，会发生 load() 事件</td></tr><tr><td>jQuery.getJSON(url,data,success(data,status,xhr))</td><td>通过 HTTP GET 请求载入 JSON 数据。</td></tr><tr><td>jQuery.getScript(url,success(response,status))</td><td>getScript() 方法通过 HTTP GET 请求载入并执行 JavaScript 文件。</td></tr><tr><td>$(from表单).serialize()</td><td>统一获取表单中的数据，以键值对 呈现（input需要name属性）</td></tr></tbody></table><h1 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h1><h2 id="回到页面顶端-获取元素位置"><a href="#回到页面顶端-获取元素位置" class="headerlink" title="回到页面顶端+获取元素位置"></a>回到页面顶端+获取元素位置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 窗口卷曲事件</span></span><br><span class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> b = $(<span class="built_in">window</span>).scrollTop() <span class="comment">// 获取页面卷曲值</span></span><br><span class="line">    <span class="keyword">let</span> a = $(<span class="string">'.jia'</span>).offset().top <span class="comment">//获取元素距离页面订单的px</span></span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">'button'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'html,body'</span>).animate(&#123;</span><br><span class="line">        scrollTop: <span class="number">0</span></span><br><span class="line">    &#125;) <span class="comment">//回到页面顶端</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;隐式迭代、链式编程&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;jQuery对象&quot;&gt;&lt;a href=&quot;#jQuery对象&quot; class=&quot;headerlink&quot; title=&quot;jQuery对象&quot;&gt;&lt;/a&gt;jQuery对象&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr
      
    
    </summary>
    
      <category term="jQuery" scheme="/categories/jQuery/"/>
    
    
      <category term="jQuery" scheme="/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>html + css - 基础</title>
    <link href="/2019/05/16/1.html%20+%20css%20-%20%E5%9F%BA%E7%A1%80/"/>
    <id>/2019/05/16/1.html + css - 基础/</id>
    <published>2019-05-16T08:50:56.639Z</published>
    <updated>2019-05-14T08:30:24.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML+CSS"></a>HTML+CSS</h1><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>position</td><td>位置</td><td></td></tr><tr><td>absolute</td><td>绝对定位</td><td></td></tr><tr><td>relative</td><td>相对定位</td><td></td></tr><tr><td>fixed</td><td>固定定位</td><td></td></tr><tr><td>Static</td><td>静态定位</td></tr></tbody></table><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>caption</td><td>标题</td><td>设置表格的标题</td></tr><tr><td>cellpadding</td><td>单元格边距</td><td>设计单元格之间的距离</td></tr><tr><td>cellspacing</td><td>单元格间距</td><td>去掉边框之间的距离，默认值2</td></tr></tbody></table><h2 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>source</td><td>视频源</td><td></td></tr><tr><td>audio</td><td>音频（同视频标签使用）</td><td></td></tr><tr><td>controls</td><td>控制栏</td><td></td></tr><tr><td>autoplay</td><td>视频自动播放</td><td></td></tr><tr><td>loop</td><td>循环播放</td></tr></tbody></table><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>action</td><td>行动</td><td>用于提交表单的程序（form标签中的属性）</td></tr><tr><td>method</td><td>方法</td><td>get、post（form标签中的属性）</td></tr><tr><td>readonly</td><td>只读的</td><td>设置输入框为只读模式</td></tr><tr><td>required</td><td>必须的</td><td>必填项</td></tr><tr><td><datalist><option></option></datalist></td><td>/</td><td>通过input中的list与其id关联</td></tr><tr><td>autofocus</td><td>自动 焦点</td><td>控件自动获取焦点</td></tr><tr><td>radio</td><td>单选控件</td><td></td></tr><tr><td>checkbox</td><td>复选框</td><td></td></tr><tr><td>checked</td><td>默认选中项</td><td></td></tr><tr><td>textarea</td><td>文本域</td></tr></tbody></table><h2 id="TDK"><a href="#TDK" class="headerlink" title="TDK"></a>TDK</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>keywords</td><td>关键词</td><td><meta name="keywords" content="It培训,前端培训"></td></tr><tr><td>description</td><td>网页描述</td></tr></tbody></table><h2 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>solid</td><td>实线边框</td><td></td></tr><tr><td>dashed</td><td>虚线边框</td><td></td></tr><tr><td>dotted</td><td>点线边框</td></tr></tbody></table><h2 id="隐藏"><a href="#隐藏" class="headerlink" title="隐藏"></a>隐藏</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>overflow:hidden</td><td></td><td>超出部分隐藏</td></tr><tr><td>display</td><td>隐藏：none、显示：block</td><td>隐藏元素 不占 位置</td></tr><tr><td>visibility:   hidden</td><td></td><td>隐藏元素 占 位置</td></tr></tbody></table><h2 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>::before</td><td>在。。之前</td><td></td></tr><tr><td>::after</td><td>在。。之后</td><td></td></tr><tr><td>content</td><td>内容</td><td>伪元素必须有content，另外默认是行内元素</td></tr><tr><td>:first-letter</td><td>第一-字母</td><td>选中首字母(例：p:first-letter{color:   red;})</td></tr><tr><td>:last-child{}</td><td></td><td>:last-child{}</td></tr><tr><td>:nth-child(){}</td><td></td><td>:nth-child(2n){}</td></tr></tbody></table><h2 id="H5新增布局标签"><a href="#H5新增布局标签" class="headerlink" title="H5新增布局标签"></a>H5新增布局标签</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>nav</td><td></td><td></td></tr><tr><td>header</td><td></td><td></td></tr><tr><td>footer</td><td></td><td></td></tr><tr><td>article</td><td>文章区域</td><td></td></tr><tr><td>section</td><td>区域,块</td></tr></tbody></table><h2 id="背景相关"><a href="#背景相关" class="headerlink" title="背景相关"></a>背景相关</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>opacity:0~1</td><td>不透明</td><td>设置背景颜色的透明度</td></tr></tbody></table><p>即有背景色，又有背景图片：background:#ff0000 url(‘smiley.gif’)</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>cursor:pointer</td><td>设置鼠标模式：小手</td><td></td></tr><tr><td>italic</td><td>倾斜</td><td>用于font-style，使字体倾斜</td></tr><tr><td>overflow：hidden</td><td>解决盒子塌陷</td><td>其他办法：给父盒子设置边框、浮动、绝对定位</td></tr><tr><td>float</td><td>浮动</td><td>3种清除浮动：overflow：hidden、clear、伪元素+clear</td></tr><tr><td>vertical-align</td><td>垂直居中</td><td>行内块元素都有vertical-align（middle）</td></tr><tr><td>nth-child(5)       nth-child(5n)      first-child      last-child</td><td>结构伪类选择器</td><td>nth-child(even)    nth-child(ood)</td></tr><tr><td>[属性] {}</td><td>属性选择器</td><td></td></tr><tr><td>box-sizing:border-box</td><td>设置盒子实际尺寸</td><td>无视border、padding</td></tr><tr><td>!important</td><td>重要的</td><td>设置样式优先级</td></tr><tr><td>placeholder</td><td>文本框的默认值属性</td><td></td></tr><tr><td>charset</td><td>meta里面 控制编码的属性</td><td></td></tr><tr><td>aglin</td><td>对齐方式</td><td></td></tr><tr><td>text-indent</td><td>首行缩进</td><td></td></tr><tr><td>target</td><td>目标</td><td></td></tr><tr><td>text-decoration</td><td>《a》  去掉下划线</td><td></td></tr><tr><td>underline</td><td>下划线</td><td></td></tr><tr><td>hover</td><td>鼠标悬浮</td><td></td></tr><tr><td>focus</td><td>焦点</td><td></td></tr><tr><td>white-space</td><td>元素中的空白</td><td></td></tr><tr><td>overflow</td><td>溢出</td><td></td></tr><tr><td>scroll</td><td>卷形物</td><td></td></tr><tr><td>transparent</td><td>透明的</td><td></td></tr><tr><td>multiple</td><td>下拉框多选 属性</td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>white-space:   nowrap;      overflow: hidden;      text-overflow: ellipsis;      width:210px;</td><td></td></tr></tbody></table><h1 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h1><h2 id="流式布局"><a href="#流式布局" class="headerlink" title="流式布局"></a>流式布局</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>通常让width写百分比</td><td>例：winth:100%</td><td>需要在mate中设置:</td></tr></tbody></table><h2 id="伸缩布局-弹性布局"><a href="#伸缩布局-弹性布局" class="headerlink" title="伸缩布局 + 弹性布局"></a>伸缩布局 + 弹性布局</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>display: flex;</td><td></td><td>需要设置父盒子为弹性布局</td></tr><tr><td>flex-direction:</td><td>设置主轴方向</td><td>flex-direction:   row  ·    row-reverse ·  column ·  column-reverse</td></tr><tr><td>justify-content:</td><td>设置在主轴的对齐</td><td>justify-content:   flex-start(默认值) · flex-end · center ·    space-between ·space-around</td></tr><tr><td>align-items</td><td>侧轴的对齐方式</td><td>align-items:   flex-start · flex-end · center · baseline · stretch(默认值)</td></tr><tr><td>flex-wrap</td><td>设置元素是否换行显示</td><td>flex-wrap: nowrap ·   wrap</td></tr><tr><td>align-content</td><td>元素换行后的对齐方式</td><td>align-content:   flex-start· flex-end · center· space-between · space-around ·stretch(默认对齐方式)</td></tr><tr><td>flex:   <number>; /<em> default 0 </em>/</number></td><td>子元素的伸缩比</td><td>属性定义子项目平均分配剩余空间，该子项目占多少份</td></tr><tr><td>order:1</td><td>设置子元素的排序方式</td><td>数值越小，排列越靠前，默认为0。</td></tr><tr><td>align-self</td><td>子元素自己的对齐方式</td><td>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果父元素没有，则等同于stretch。</td></tr></tbody></table><h2 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>通过媒体查询+样式层叠改变页面样式</td><td></td></tr></tbody></table><h2 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>@media</td><td>媒体</td><td>@media only screen   and (width: 320px) and (height: 568px) {html{font-size: 16px;}}</td></tr><tr><td>all</td><td>所有的设备</td><td></td></tr><tr><td>print</td><td>打印设备</td><td></td></tr><tr><td>screen</td><td>电脑、平板、手机</td><td></td></tr><tr><td>orientation:   portrait</td><td>竖屏</td><td></td></tr><tr><td>orientation:   landscape</td><td>横屏</td><td></td></tr><tr><td>only</td><td></td><td>指定某个特定的媒体类型, 可以省略</td></tr><tr><td>and</td><td></td><td>可以将多个媒体特性链接到一块,相当于且</td></tr><tr><td>not</td><td></td><td>排除某个媒体特性 相当于非,可以省略</td></tr></tbody></table><h1 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h1><h2 id="过度"><a href="#过度" class="headerlink" title="过度"></a>过度</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>transition-property:   all;</td><td>过渡-性质</td><td>设置哪些属性有动画效果,连写必填</td></tr><tr><td>transition-duration:   1s;</td><td>过渡-持续</td><td>设置动画完成时间,连写必填</td></tr><tr><td>transition-delay:   1s;</td><td>过渡-延期</td><td>设置动画延时执行时间(可以设置)</td></tr><tr><td>transition-timing-function:linear</td><td>过渡-定时-功能</td><td>设置动画速度类型</td></tr></tbody></table><h2 id="2D转换"><a href="#2D转换" class="headerlink" title="2D转换"></a>2D转换</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>translate(x,y)</td><td>位移</td><td>transform:   translate(100px, 200px) //设置1个值 就是水平</td></tr><tr><td>rotate(angle)</td><td>旋转</td><td></td></tr><tr><td>transform-origin</td><td>变换-起源、原点</td><td>改变旋转点，例：transform-origin:   100px 100px;（top left）</td></tr><tr><td>scale(x,y)</td><td>缩放</td><td>transform: scale(0,   0); //值代表倍数，元素缩小：0-1</td></tr><tr><td>skew(x-angle,y-angle)</td><td>倾斜</td></tr></tbody></table><h2 id="3D转换"><a href="#3D转换" class="headerlink" title="3D转换"></a>3D转换</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>translateX(n)、translateY(n)、translateZ(n)</td><td>位移</td><td></td></tr><tr><td>rotateX()、rotateY()、rotateZ()</td><td>旋转</td><td></td></tr><tr><td>scaleX()、scaleY()</td><td>缩放</td><td></td></tr><tr><td>skewX()、skewY()</td><td>倾斜</td><td></td></tr><tr><td>perspective</td><td>透视</td><td>800-1000</td></tr><tr><td>transform-style:   preserve-3d</td><td>转换成3D</td></tr></tbody></table><h2 id="动画-1"><a href="#动画-1" class="headerlink" title="动画"></a>动画</h2><table><thead><tr><th>英文</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>@keyframes</td><td>关键帧</td><td>定义动画</td></tr><tr><td>animation-name</td><td>动画-名称</td><td>规定 @keyframes 动画的名称。</td></tr><tr><td>animation-duration</td><td>动画-持续时间</td><td>规定动画完成一个周期所花费的时间。</td></tr><tr><td>animation-timing-function</td><td>动画-定时-功能</td><td>规定动画的速度曲线。默认是   “ease”。</td></tr><tr><td>animation-delay</td><td>动画-延迟</td><td>规定动画何时开始。默认是 0。</td></tr><tr><td>animation-iteration-count</td><td>动画-迭代-计数</td><td>规定动画被播放的次数。默认是 1。还有   infinite</td></tr><tr><td>animation-direction</td><td>动画-方向</td><td>动画是否在下一周期逆向地播放。默认是   “normal”，alternate逆播放</td></tr><tr><td>animation-play-state</td><td>动画-播放-状态</td><td>规定动画是否正在运行或暂停。默认是   “running”。还有“paused”</td></tr><tr><td>animation-fill-mode</td><td>动画-填充-模式</td><td>规定动画结束后状态，保持 forwards   回到起始 backwards</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTML-CSS&quot;&gt;&lt;a href=&quot;#HTML-CSS&quot; class=&quot;headerlink&quot; title=&quot;HTML+CSS&quot;&gt;&lt;/a&gt;HTML+CSS&lt;/h1&gt;&lt;h2 id=&quot;定位&quot;&gt;&lt;a href=&quot;#定位&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="前端" scheme="/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>js实现盒子内容无缝滚动</title>
    <link href="/2019/05/14/js%E5%AE%9E%E7%8E%B0%E7%9B%92%E5%AD%90%E5%86%85%E5%AE%B9%E6%97%A0%E7%BC%9D%E6%BB%9A%E5%8A%A8/"/>
    <id>/2019/05/14/js实现盒子内容无缝滚动/</id>
    <published>2019-05-14T06:00:59.682Z</published>
    <updated>2019-05-14T06:03:20.148Z</updated>
    
    <content type="html"><![CDATA[<h2 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        #box &#123;height: 144px;width: 300px;margin: 100px auto;background: #eee;overflow: hidden;text-align: center;&#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        var lHeight = 24;</span></span><br><span class="line"><span class="undefined">        var time = 50;</span></span><br><span class="line"><span class="undefined">        box.innerHTML += box.innerHTML;</span></span><br><span class="line"><span class="undefined">        box.scrollTop = 0;</span></span><br><span class="line"><span class="undefined">        var timer;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        scrollMove()</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function scrollMove() &#123;</span></span><br><span class="line"><span class="undefined">            box.scrollTop++;</span></span><br><span class="line"><span class="undefined">            timer = setInterval('scroll()', time);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        // 间歇滚动</span></span><br><span class="line"><span class="undefined">        function scrollUp() &#123;</span></span><br><span class="line"><span class="undefined">            if (box.scrollTop % lHeight == 0) &#123; //滚动一行后，延时2秒</span></span><br><span class="line"><span class="undefined">                clearInterval(timer);</span></span><br><span class="line"><span class="undefined">                setTimeout("scrollMove()", 2000);</span></span><br><span class="line"><span class="undefined">            &#125; else &#123;</span></span><br><span class="line"><span class="undefined">                box.scrollTop++;</span></span><br><span class="line"><span class="undefined">                //判断滚动高度,当滚动高度大于box本身的高度时，使其回到原点重新滚动</span></span><br><span class="line"><span class="undefined">                if (box.scrollTop &gt;= box.scrollHeight / 2) &#123;</span></span><br><span class="line"><span class="undefined">                    box.scrollTop = 0;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        // 无缝滚动</span></span><br><span class="line"><span class="undefined">        function scroll() &#123;</span></span><br><span class="line"><span class="undefined">            box.scrollTop++;</span></span><br><span class="line"><span class="undefined">            //判断滚动高度,当滚动高度大于box本身的高度时，使其回到原点重新滚动</span></span><br><span class="line"><span class="undefined">            if (box.scrollTop &gt;= box.scrollHeight / 2) &#123;</span></span><br><span class="line"><span class="undefined">                box.scrollTop = 0;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        box.onmouseenter = function () &#123;</span></span><br><span class="line"><span class="undefined">            clearInterval(timer)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        box.onmouseleave = function () &#123;</span></span><br><span class="line"><span class="undefined">            scrollMove()</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;直接上代码&quot;&gt;&lt;a href=&quot;#直接上代码&quot; class=&quot;headerlink&quot; title=&quot;直接上代码&quot;&gt;&lt;/a&gt;直接上代码&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="JavaScript" scheme="/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS实现文件拖拽上传功能</title>
    <link href="/2019/05/13/JS%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E6%8B%96%E6%8B%BD%E4%B8%8A%E4%BC%A0%E5%8A%9F%E8%83%BD/"/>
    <id>/2019/05/13/JS实现文件拖拽上传功能/</id>
    <published>2019-05-13T07:22:53.447Z</published>
    <updated>2019-05-13T07:23:49.818Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.upload</span> &#123;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            top: 50%;</span></span><br><span class="line"><span class="undefined">            left: 50%;</span></span><br><span class="line"><span class="undefined">            margin-left: -250px;</span></span><br><span class="line"><span class="undefined">            margin-top: -25px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.upload</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="undefined">            width: 500px;</span></span><br><span class="line"><span class="undefined">            height: 50px;</span></span><br><span class="line"><span class="undefined">            line-height: 50px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="undefined">            box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.upload</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="undefined">            content: '请将文件拖拽到该区域';</span></span><br><span class="line"><span class="undefined">            display: block;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.upload</span>&gt;<span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="undefined">            text-decoration: none;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.upload</span> <span class="selector-class">.uploadInput</span> &#123;</span></span><br><span class="line"><span class="undefined">            display: none;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- header --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- content --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content-box w"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span> <span class="attr">ondrop</span>=<span class="string">"drop(event)"</span> <span class="attr">ondragover</span>=<span class="string">"allowDrop(event)"</span> <span class="attr">ondragleave</span>=<span class="string">"removeDrop(event)"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- &lt;a href="javascript:;" class="uploadBtn"&gt;从电脑中选择 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"uploadInput"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"uploadFile"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./jquery-3.3.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        /* 文件拖拽上传</span></span><br><span class="line"><span class="undefined">         */</span></span><br><span class="line"><span class="undefined">        var FormData = new FormData</span></span><br><span class="line"><span class="undefined">        //文件移入</span></span><br><span class="line"><span class="undefined">        function allowDrop(event) &#123;</span></span><br><span class="line"><span class="undefined">            event.preventDefault(); //阻止浏览器默认事件</span></span><br><span class="line"><span class="undefined">            event.target.style.border = "1px dotted red"</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        //文件移除</span></span><br><span class="line"><span class="undefined">        function removeDrop(event) &#123;</span></span><br><span class="line"><span class="undefined">            event.preventDefault();</span></span><br><span class="line"><span class="undefined">            event.target.style.border = "1px solid black"</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        //当鼠标松开文件</span></span><br><span class="line"><span class="undefined">        function drop(event) &#123;</span></span><br><span class="line"><span class="undefined">            event.preventDefault();</span></span><br><span class="line"><span class="undefined">            event.target.style.border = "1px solid green"</span></span><br><span class="line"><span class="undefined">            var files = event.dataTransfer.files</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            // if(files.length==0)&#123;</span></span><br><span class="line"><span class="undefined">            // 没有文件返回false</span></span><br><span class="line"><span class="undefined">            //     return false</span></span><br><span class="line"><span class="undefined">            // &#125;</span></span><br><span class="line"><span class="undefined">            AddFiles(files)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        //添加文件，for循环掉多个文件 ，支持多文件添加,这里也可以做是否为图片文件判断</span></span><br><span class="line"><span class="undefined">        function AddFiles(files) &#123;</span></span><br><span class="line"><span class="undefined">            console.log(files);</span></span><br><span class="line"><span class="undefined">            for (var i = 0; i &lt; files.length; i++) &#123;</span></span><br><span class="line"><span class="undefined">                FormData.append("file", files[i])</span></span><br><span class="line"><span class="undefined">                FileUpload(FormData)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        //最后将拿到的文件进行ajax上传，暂时没拿服务器测试，实际情况可能会有所出入</span></span><br><span class="line"><span class="undefined">        function FileUpload(FormData) &#123;</span></span><br><span class="line"><span class="undefined">            console.log(FormData);</span></span><br><span class="line"><span class="undefined">            ///这里用了jQuery的ajax封装方法，这里还没来得及封装自己的ajax  先用了jQuery的</span></span><br><span class="line"><span class="undefined">            // 　$.ajax(&#123;</span></span><br><span class="line"><span class="undefined">            //     url:url,</span></span><br><span class="line"><span class="undefined">            //     type:"post",</span></span><br><span class="line"><span class="undefined">            //     data:FormData,</span></span><br><span class="line"><span class="undefined">            //     processData:false,</span></span><br><span class="line"><span class="undefined">            //     contentType:false,</span></span><br><span class="line"><span class="undefined">            //     success:function(data)&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            //     &#125;</span></span><br><span class="line"><span class="undefined">            // &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        // 点击上传证书文件包</span></span><br><span class="line"><span class="undefined">        // $('.uploadBtn').click(function () &#123;</span></span><br><span class="line"><span class="undefined">        //     $('.uploadInput')[0].click()</span></span><br><span class="line"><span class="undefined">        // &#125;)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="JavaScript" scheme="/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>限制文本字数，超出部分用省略号显示</title>
    <link href="/2019/05/13/%E9%99%90%E5%88%B6%E6%96%87%E6%9C%AC%E5%AD%97%E6%95%B0%EF%BC%8C%E8%B6%85%E5%87%BA%E9%83%A8%E5%88%86%E7%94%A8%E7%9C%81%E7%95%A5%E5%8F%B7%E6%98%BE%E7%A4%BA/"/>
    <id>/2019/05/13/限制文本字数，超出部分用省略号显示/</id>
    <published>2019-05-13T06:41:33.627Z</published>
    <updated>2019-05-13T06:45:28.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设置一行文字显示文本数量，超出部分用…表示"><a href="#设置一行文字显示文本数量，超出部分用…表示" class="headerlink" title="设置一行文字显示文本数量，超出部分用…表示"></a>设置一行文字显示文本数量，超出部分用…表示</h1><p>知识点：css3 text-overflow属性</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>clip</td><td>修剪文本。</td></tr><tr><td>ellipsis</td><td>显示省略符号来代表被修剪的文本。</td></tr><tr><td>string</td><td>使用给定的字符串来代表被修剪的文本。</td></tr></tbody></table><h1 id="代码实现（单行）超出部分省略："><a href="#代码实现（单行）超出部分省略：" class="headerlink" title="代码实现（单行）超出部分省略："></a>代码实现（单行）超出部分省略：</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>; </span><br><span class="line"><span class="selector-tag">text-overflow</span><span class="selector-pseudo">:ellipsis</span>;</span><br><span class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:-webkit-box</span>; </span><br><span class="line"><span class="selector-tag">-webkit-box-orient</span><span class="selector-pseudo">:vertical</span>;</span><br><span class="line"><span class="selector-tag">-webkit-line-clamp</span><span class="selector-pseudo">:2</span>; </span><br><span class="line"></span><br><span class="line">// or</span><br><span class="line"></span><br><span class="line">overflow:hidden; //超出的文本隐藏</span><br><span class="line">text-overflow:ellipsis; //溢出用省略号显示</span><br><span class="line">white-space:nowrap; //溢出不换行</span><br></pre></td></tr></table></figure><h1 id="js实现多行"><a href="#js实现多行" class="headerlink" title="js实现多行"></a>js实现多行</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">#view&#123;border:1px solid red;</span><br><span class="line">width:<span class="number">200</span>px;</span><br><span class="line">height:<span class="number">70</span>px;</span><br><span class="line">overflow:auto;</span><br><span class="line">&#125;</span><br><span class="line"> &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp"> &lt;body&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div id='view'&gt;&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">s = '今天学习任务是总结1、快排代码及思想，2、css实现三角形圆形，3、js和css实现限制显示字数，文字长度超出部分用省略号表示 '</span></span><br><span class="line"><span class="string">el = document.getElementById('view');</span></span><br><span class="line"><span class="string">n = el.offsetHeight;  //取到当前包裹文本的父级元素的高度， </span></span><br><span class="line"><span class="string">for(i=0; i&lt;s.length; i++) &#123;</span></span><br><span class="line"><span class="string">          el.innerHTML = s.substr(0, i);  //表示在for循环中取出长度递增的文段</span></span><br><span class="line"><span class="string">          if(n &lt; el.scrollHeight) &#123; </span></span><br><span class="line"><span class="string">          //当前文本高度的内容的高度代表着刚好达到溢出的界限，</span></span><br><span class="line"><span class="string">             el.style.overflow = 'hidden';  //将父级元素设置为隐藏</span></span><br><span class="line"><span class="string">             el.innerHTML = s.substr(0, i-3) + '...';  //最后三个字</span></span><br><span class="line"><span class="string">             break;</span></span><br><span class="line"><span class="string">     &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="当鼠标移上去显示被省略的内容"><a href="#当鼠标移上去显示被省略的内容" class="headerlink" title="当鼠标移上去显示被省略的内容"></a>当鼠标移上去显示被省略的内容</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"> <span class="attribute">overflow</span>: visible;</span><br><span class="line"> <span class="attribute">text-overflow</span>: inherit;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设置一行文字显示文本数量，超出部分用…表示&quot;&gt;&lt;a href=&quot;#设置一行文字显示文本数量，超出部分用…表示&quot; class=&quot;headerlink&quot; title=&quot;设置一行文字显示文本数量，超出部分用…表示&quot;&gt;&lt;/a&gt;设置一行文字显示文本数量，超出部分用…表示&lt;/
      
    
    </summary>
    
      <category term="前端" scheme="/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>CSS3自定义滚动条样式</title>
    <link href="/2019/05/13/CSS3%E8%87%AA%E5%AE%9A%E4%B9%89%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/"/>
    <id>/2019/05/13/CSS3自定义滚动条样式/</id>
    <published>2019-05-13T06:00:17.057Z</published>
    <updated>2019-05-13T06:03:03.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>webkit支持拥有overflow属性的区域，列表框，下拉菜单，textarea的滚动条自定义样式，所以用处还是挺大的。当然，兼容所有浏览器的滚动条样式目前是不存在的。</p><h2 id="滚动条组成"><a href="#滚动条组成" class="headerlink" title="滚动条组成"></a>滚动条组成</h2><ul><li>::-webkit-scrollbar 滚动条整体部分</li><li>::-webkit-scrollbar-thumb  滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）</li><li>::-webkit-scrollbar-track  滚动条的轨道（里面装有Thumb）</li><li>::-webkit-scrollbar-button 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。</li><li>::-webkit-scrollbar-track-piece 内层轨道，滚动条中间部分（除去）</li><li>::-webkit-scrollbar-corner 边角，即两个滚动条的交汇处</li><li>::-webkit-resizer 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</li></ul><h2 id="简洁版"><a href="#简洁版" class="headerlink" title="简洁版"></a>简洁版</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F5F5F5</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*定义滚动条轨道 内阴影+圆角*/</span></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-track</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(0,0,0,0.3);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F5F5F5</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*定义滑块 内阴影+圆角*/</span></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(0,0,0,.3);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#555</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="详细设置"><a href="#详细设置" class="headerlink" title="详细设置"></a>详细设置</h2><p>定义滚动条就是利用伪元素与伪类，那什么是伪元素和伪类呢？</p><p>伪类大家应该很熟悉:link,:focus,:hover，此外CSS3中又增加了许多伪类选择器，如:nth-child，:last-child，:nth-last-of-type()等。</p><p>CSS中的伪元素大家以前看过：:first-line,:first-letter,:before,:after。那么在CSS3中，伪元素进行了调整，在以前的基础上增加了一个“：”也就是现在变成了“::first-letter,::first-line,::before,::after”，另外CSS3还增加了一个“::selection”。两个“：：”和一个“：”在css3中主要用来区分伪类和伪元素。</p><p>webkit的伪类和伪元素的实现很强，可以把滚动条当成一个页面元素来定义，再结合一些高级的CSS3属性，比如渐变、圆角、RGBa等等。然后如果有些地方要用图片，可以把图片也可以转换成Base64，不然每次都得加载那个多个图片，增加请求数。</p><p>任何对象都可以设置：边框、阴影、背景图片等等，创建的滚动条任然会按照操作系统本身的设置来完成其交互的行为。下面的伪类可以应用到上面的伪元素中。有点小复杂，具体怎么写可以看第一个demo，那里也有注释。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:horizontal</span></span><br><span class="line">//horizontal伪类适用于任何水平方向上的滚动条</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:vertical</span></span><br><span class="line">//vertical伪类适用于任何垂直方向的滚动条</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:decrement</span></span><br><span class="line">//decrement伪类适用于按钮和轨道碎片。表示递减的按钮或轨道碎片，例如可以使区域向上或者向右移动的区域和按钮</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:increment</span></span><br><span class="line">//increment伪类适用于按钮和轨道碎片。表示递增的按钮或轨道碎片，例如可以使区域向下或者向左移动的区域和按钮</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:start</span></span><br><span class="line">//start伪类适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的前面</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:end</span></span><br><span class="line">//end伪类适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的后面</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:double-button</span></span><br><span class="line">//double-button伪类适用于按钮和轨道碎片。判断轨道结束的位置是否是一对按钮。也就是轨道碎片紧挨着一对在一起的按钮。</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:single-button</span></span><br><span class="line">//single-button伪类适用于按钮和轨道碎片。判断轨道结束的位置是否是一个按钮。也就是轨道碎片紧挨着一个单独的按钮。</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:no-button</span></span><br><span class="line"><span class="selector-tag">no-button</span>伪类表示轨道结束的位置没有按钮。</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:corner-present</span></span><br><span class="line">//corner-present伪类表示滚动条的角落是否存在。</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:window-inactive</span></span><br><span class="line">//适用于所有滚动条，表示包含滚动条的区域，焦点不在该窗口的时候。</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-track-piece</span><span class="selector-pseudo">:start</span> &#123;</span><br><span class="line"><span class="comment">/*滚动条上半边或左半边*/</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span><span class="selector-pseudo">:window-inactive</span> &#123;</span><br><span class="line"><span class="comment">/*当焦点不在当前区域滑块的状态*/</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span><span class="selector-pseudo">:horizontal</span><span class="selector-pseudo">:decrement</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="comment">/*当鼠标在水平滚动条下面的按钮上的状态*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;webkit支持拥有overflow属性的区域，列表框，下拉菜单，textarea的滚动条自定义样式，所以用处还是挺大的。当然，兼容所有浏览
      
    
    </summary>
    
      <category term="前端" scheme="/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>CSS 实现隐藏滚动条同时又可以滚动</title>
    <link href="/2019/05/13/CSS%20%E5%AE%9E%E7%8E%B0%E9%9A%90%E8%97%8F%E6%BB%9A%E5%8A%A8%E6%9D%A1%E5%90%8C%E6%97%B6%E5%8F%88%E5%8F%AF%E4%BB%A5%E6%BB%9A%E5%8A%A8/"/>
    <id>/2019/05/13/CSS 实现隐藏滚动条同时又可以滚动/</id>
    <published>2019-05-13T05:58:53.333Z</published>
    <updated>2019-05-13T06:00:12.490Z</updated>
    
    <content type="html"><![CDATA[<h1 id="webkit-scrollbar"><a href="#webkit-scrollbar" class="headerlink" title="::-webkit-scrollbar"></a>::-webkit-scrollbar</h1><blockquote><p>有兼容问题</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">            <span class="selector-pseudo">::-webkit-scrollbar</span> &#123;<span class="attribute">display</span>:none&#125;</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">" width:200px;   height: 200px;  overflow-y: scroll;"</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            11111<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;webkit-scrollbar&quot;&gt;&lt;a href=&quot;#webkit-scrollbar&quot; class=&quot;headerlink&quot; title=&quot;::-webkit-scrollbar&quot;&gt;&lt;/a&gt;::-webkit-scrollbar&lt;/h1&gt;&lt;blockquote
      
    
    </summary>
    
      <category term="前端" scheme="/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>盒子设置最小高度值并自适应高度</title>
    <link href="/2019/05/13/%E7%9B%92%E5%AD%90%E8%AE%BE%E7%BD%AE%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E5%80%BC%E5%B9%B6%E8%87%AA%E9%80%82%E5%BA%94%E9%AB%98%E5%BA%A6/"/>
    <id>/2019/05/13/盒子设置最小高度值并自适应高度/</id>
    <published>2019-05-13T01:45:56.894Z</published>
    <updated>2019-05-13T01:47:11.315Z</updated>
    
    <content type="html"><![CDATA[<h1 id="盒子设置最小高度值并自适应高度"><a href="#盒子设置最小高度值并自适应高度" class="headerlink" title="盒子设置最小高度值并自适应高度"></a>盒子设置最小高度值并自适应高度</h1><p>一般来说，想让一个DIV盒子的高度能够根据盒子内的内容自动调整，不设置盒子的高度值（height）就行了。</p><p>但还有一种情况：为了使盒子布局美观，需要对盒子设置一个初始高度，当盒子中的内容很少时，保持这个初始高度，如果内容超过该盒子初始高度的容量，则盒子的高度根据内容自动调整增高。所以这时需要设置一个具体的DIV盒子高度值，又要使其能够在超过初始高度时自适应。</p><p>具体解决办法是（假设DIV盒子的初始高度是500px）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#columnMain</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="attribute">min-height</span>:<span class="number">500px</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">height</span>:auto <span class="meta">!important</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">height</span>:<span class="number">500px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里，height:500px;适用于IE6，因为IE6不认识前两条CSS语句，但height:500px;对IE6足够了，因为IE6的渲染办法是当已设置的实际高度不够用时，会自动撑开盒子的高度；前两条CSS语句min-height:500px;height:auto !important;是对IE7+、Chrome、FF和Oprea用的，这些版本的浏览器使用min-height:500px;设置了最小高度，如果超过了最小高度，则使用height:auto !important;自动调整高度，注意这条CSS语句中有!important，所以它的优先性是超过其后的height:500px;的。</p><p>至此，问题解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;盒子设置最小高度值并自适应高度&quot;&gt;&lt;a href=&quot;#盒子设置最小高度值并自适应高度&quot; class=&quot;headerlink&quot; title=&quot;盒子设置最小高度值并自适应高度&quot;&gt;&lt;/a&gt;盒子设置最小高度值并自适应高度&lt;/h1&gt;&lt;p&gt;一般来说，想让一个DIV盒子的高度能
      
    
    </summary>
    
      <category term="前端" scheme="/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>JS判断后台返回值是否存在</title>
    <link href="/2019/05/10/JS%E5%88%A4%E6%96%AD%E5%90%8E%E5%8F%B0%E8%BF%94%E5%9B%9E%E5%80%BC%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8/"/>
    <id>/2019/05/10/JS判断后台返回值是否存在/</id>
    <published>2019-05-10T09:20:33.674Z</published>
    <updated>2019-05-10T09:24:11.185Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JS判断json中的某个字段是否存在："><a href="#JS判断json中的某个字段是否存在：" class="headerlink" title="JS判断json中的某个字段是否存在："></a>JS判断json中的某个字段是否存在：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hasOwnProperty(String)，存在的话，返回true，否则返回false。代码如下：</span></span><br><span class="line"><span class="keyword">if</span> (res.data.hasOwnProperty(<span class="string">'objectName'</span>)) &#123;</span><br><span class="line"><span class="comment">// 如果存在              </span></span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS判断字符串是否为空："><a href="#JS判断字符串是否为空：" class="headerlink" title="JS判断字符串是否为空："></a>JS判断字符串是否为空：</h1><p><strong>长度判断</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> strings = <span class="string">''</span>; </span><br><span class="line"><span class="keyword">if</span> (string.length == <span class="number">0</span>) &#123; </span><br><span class="line">    alert(<span class="string">'字符串为空'</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>排除空格后，根据长度判断</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> strings = <span class="string">' '</span>; </span><br><span class="line"><span class="keyword">if</span> (strings.replace(<span class="regexp">/(^s*)|(s*$)/g</span>, <span class="string">""</span>).length ==<span class="number">0</span>) &#123; </span><br><span class="line">    alert(<span class="string">'字符串为空'</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>函数判断为空串，字符串为空或全部为空格</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 字符串为空或全部为空格，返回true；否则，返回false</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNull</span>(<span class="params"> str </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( str == <span class="string">""</span> ) </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> regu = <span class="string">"^[ ]+$"</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(regu);</span><br><span class="line">    <span class="keyword">return</span> re.test(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后台还是比较喜欢返回null的，如果返回的是null上面就没有办法判断了，下面是我的一些改进。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是null</span></span><br><span class="line"><span class="keyword">var</span> exp = <span class="literal">null</span>; </span><br><span class="line"><span class="keyword">if</span> (exp == <span class="literal">null</span>) &#123; </span><br><span class="line">    alert(<span class="string">"is null"</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面判断的只是null的类型，有可能为空又有可能为null。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否为：空、空格、null，是的话返回true。否则false</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNull</span>(<span class="params"> str </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( str == <span class="string">""</span> ) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> ( str == <span class="literal">null</span> ) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^[ ]+$"</span>);</span><br><span class="line">    <span class="keyword">return</span> re.test(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一个比较简单的写法：要同时判断null和undefined时可使用本法。 如果 exp 为 undefined，或数字零，或 false，也会得到与 null 相同的结果，虽然 null 和二者不一样。</p><p>注意：要同时判断 null、undefined、数字零、false 时可使用本法。但是这种方法不能判断出是否为空字符串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> exp = <span class="literal">null</span>; </span><br><span class="line"><span class="keyword">if</span> (!exp) &#123; </span><br><span class="line">    alert(<span class="string">"is null"</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JS判断json中的某个字段是否存在：&quot;&gt;&lt;a href=&quot;#JS判断json中的某个字段是否存在：&quot; class=&quot;headerlink&quot; title=&quot;JS判断json中的某个字段是否存在：&quot;&gt;&lt;/a&gt;JS判断json中的某个字段是否存在：&lt;/h3&gt;&lt;figu
      
    
    </summary>
    
      <category term="JavaScript" scheme="/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>如何让多个li居中于ul中间</title>
    <link href="/2019/05/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E5%A4%9A%E4%B8%AAli%E5%B1%85%E4%B8%AD%E4%BA%8Eul%E4%B8%AD%E9%97%B4/"/>
    <id>/2019/05/10/如何让多个li居中于ul中间/</id>
    <published>2019-05-10T05:27:05.549Z</published>
    <updated>2019-05-10T08:32:20.053Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解决方法一："><a href="#解决方法一：" class="headerlink" title="解决方法一："></a>解决方法一：</h1><blockquote><p>利用margin-left设置；</p></blockquote><p>比如 侧边栏的div宽300px;我有四个li，每个设置height：30px；width：60px；并让这四个li位于侧边栏的头部；就可以设置ul的margin-left：80px；</p><p>这样就会使四个li居于中间；如果想使四个li之间有间隔。可以设置li的margin-left:5px;这样就需要改变先前ul的margin-left为（300-240-20）/2-2.5，因为margin-left是透明的，所以才会有上面这个计算式子。可见可能会出现小数，这样是我们要避免的。利用ul的margin-left很简单地设置居中，只是不是强迫症患者的首选。因为这个方法，大家应该都会，而且百度一下，都会出来这样的例子，在此不贴代码。</p><p>在这个方法中，我们可以设置ul的高和宽，但只要不让ul的宽超过div的宽，以及不让ul的宽低于四个li的和的宽，就不会出现排版错误。</p><p>本人也不喜欢这个方法，于是，就有了第二种方法。</p><h1 id="解决方法二："><a href="#解决方法二：" class="headerlink" title="解决方法二："></a>解决方法二：</h1><blockquote><p>利用ul的text-align：center属性；</p></blockquote><p>对于第二种方法，首先要说的是，设置ul的display：table，text-align:center。是不是觉得好神奇，怎么会出现display：table，说实话，这也是我第一次用到这个属性，虽然知道有这个属性，但一般还真不用，我们似乎只用none，inline和block，但这里我们必须用这个属性，不然解决不了。下面是一段代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        #div1 &#123;</span></span><br><span class="line"><span class="undefined">            width: 500px;</span></span><br><span class="line"><span class="undefined">            height: 500px;</span></span><br><span class="line"><span class="undefined">            background-color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        #ul1 &#123;</span></span><br><span class="line"><span class="undefined">            display: table;</span></span><br><span class="line"><span class="undefined">            margin: 0 auto;</span></span><br><span class="line"><span class="undefined">            height: 40px;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .li1 &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            margin-left: 5px;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            width: 70px;</span></span><br><span class="line"><span class="undefined">            height: 60px;</span></span><br><span class="line"><span class="undefined">            line-height: 60px;</span></span><br><span class="line"><span class="undefined">            font-size: 20px;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">            list-style-type: none;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"ul1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>&gt;</span>22222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>&gt;</span>33333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>&gt;</span>44444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这段代码可以解决居中方法，注意：ul设为display：table；text-align：center；但记住千万千万不可以设置ul的宽，不然无法实现。</p><h1 id="解决方法三："><a href="#解决方法三：" class="headerlink" title="解决方法三："></a>解决方法三：</h1><blockquote><p>其实这不能用的方法，这方法太渣；<br>就是ul的设为text-align：center；</p></blockquote><p>li的设为display：inline；</p><p>但这样的话，就无法做出li的宽和高，虽然也会居中，但已经失去了其解决的意义。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;解决方法一：&quot;&gt;&lt;a href=&quot;#解决方法一：&quot; class=&quot;headerlink&quot; title=&quot;解决方法一：&quot;&gt;&lt;/a&gt;解决方法一：&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;利用margin-left设置；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如 
      
    
    </summary>
    
      <category term="前端" scheme="/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>时间格式化、时间戳转换</title>
    <link href="/2019/05/09/%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96%E3%80%81%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2/"/>
    <id>/2019/05/09/时间格式化、时间戳转换/</id>
    <published>2019-05-09T08:38:53.862Z</published>
    <updated>2019-05-09T10:18:17.817Z</updated>
    
    <content type="html"><![CDATA[<h1 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> ddd = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  <span class="keyword">var</span> year = ddd.getFullYear()</span><br><span class="line">  <span class="keyword">var</span> month = ddd.getMonth() + <span class="number">1</span></span><br><span class="line">  <span class="keyword">var</span> day = ddd.getDate()</span><br><span class="line">  <span class="keyword">var</span> hours = ddd.getHours()</span><br><span class="line">  <span class="keyword">var</span> minutes = ddd.getMinutes()</span><br><span class="line">  <span class="keyword">var</span> seconds = ddd.getSeconds()</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;year&#125;</span>-<span class="subst">$&#123;month&#125;</span>-<span class="subst">$&#123;day&#125;</span> <span class="subst">$&#123;hours&#125;</span>:<span class="subst">$&#123;minutes&#125;</span>:<span class="subst">$&#123;seconds&#125;</span>`</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//or</span></span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> tempTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">return</span> tempTime.toLocaleDateString().replace(<span class="regexp">/\//g</span>, <span class="string">"-"</span>) + <span class="string">" "</span> + tempTime.toTimeString().substr(<span class="number">0</span>, <span class="number">8</span>)</span><br></pre></td></tr></table></figure><h1 id="时间转时间戳"><a href="#时间转时间戳" class="headerlink" title="时间转时间戳"></a>时间转时间戳</h1><blockquote><p>javascript获得时间戳的方法有四种，都是通过实例化时间对象 new Date() 来进一步获取当前的时间戳</p></blockquote><p>1.var timestamp1 = Date.parse(new Date()); // 结果：1477808630000 不推荐这种办法，毫秒级别的数值被转化为000</p><p>  console.log(timestamp1);</p><p>2.var timestamp2 = (new Date()).valueOf(); // 结果：1477808630404 通过<code>valueOf()</code>函数返回指定对象的原始值获得准确的时间戳值</p><p>console.log(timestamp2);</p><p>3.var timestamp3 = new Date().getTime(); // 结果：1477808630404 ，通过原型方法直接获得当前时间的毫秒值，准确</p><p>console.log(timestamp3);</p><p>4.var timetamp4 = Number(new Date()) ; //结果：1477808630404 ,将时间转化为一个number类型的数值，即时间戳</p><p>console.log(timetamp4);</p><p><strong>如果不需要精确到毫秒，可以 / 1000</strong></p><h1 id="时间戳转时间"><a href="#时间戳转时间" class="headerlink" title="时间戳转时间"></a>时间戳转时间</h1><p>var timestamp4 = new Date(1472048779952);**//直接用 new Date(时间戳) 格式转化获得当前时间</p><p>console.log(timestamp4);</p><p>console.log(timestamp4.toLocaleDateString().replace(/\//g, “-“) + “ “ + timestamp4.toTimeString().substr(0, 8)); //再利用拼接正则等手段转化为yyyy-MM-dd hh:mm:ss 格式</p><p>不过这样转换在某些浏览器上会出现不理想的效果，因为toLocaleDateString()方法是因浏览器而异的，比如 IE为2016年8月24日 22:26:19 格式 搜狗为Wednesday, August 24, 2016 22:39:42</p><p><em>可以通过分别获取时间的年月日进行拼接，比如：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getdate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">                y = now.getFullYear(),</span><br><span class="line">                m = now.getMonth() + <span class="number">1</span>,</span><br><span class="line">                d = now.getDate();</span><br><span class="line">            <span class="keyword">return</span> y + <span class="string">"-"</span> + (m &lt; <span class="number">10</span> ? <span class="string">"0"</span> + m : m) + <span class="string">"-"</span> + (d &lt; <span class="number">10</span> ? <span class="string">"0"</span> + d : d) + <span class="string">" "</span> + now.toTimeString().substr(<span class="number">0</span>, <span class="number">8</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;时间格式化&quot;&gt;&lt;a href=&quot;#时间格式化&quot; class=&quot;headerlink&quot; title=&quot;时间格式化&quot;&gt;&lt;/a&gt;时间格式化&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="JavaScript" scheme="/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS 盒子模型塌陷的解决方法</title>
    <link href="/2019/05/09/CSS%20%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%A1%8C%E9%99%B7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>/2019/05/09/CSS 盒子模型塌陷的解决方法/</id>
    <published>2019-05-09T07:33:02.154Z</published>
    <updated>2019-05-10T05:27:02.004Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML+CSS"></a>HTML+CSS</h1><h2 id="一、盒子塌陷是什么？"><a href="#一、盒子塌陷是什么？" class="headerlink" title="一、盒子塌陷是什么？"></a>一、盒子塌陷是什么？</h2><p>本应该在父盒子内部的元素跑到了外部。</p><h2 id="二，为什么会出现盒子塌陷？"><a href="#二，为什么会出现盒子塌陷？" class="headerlink" title="二，为什么会出现盒子塌陷？"></a>二，为什么会出现盒子塌陷？</h2><p> 当父元素没设置足够大小的时候，而子元素设置了浮动的属性，子元素就会跳出父元素的边界（脱离文档流），尤其是当父元素的高度为auto时，而父元素中又没有其它非浮动的可见元素时，父盒子的高度就会直接塌陷为零， 我们称这是<strong>CSS高度塌陷</strong>。</p><h2 id="三，关于盒子塌陷的几种解决方法"><a href="#三，关于盒子塌陷的几种解决方法" class="headerlink" title="三，关于盒子塌陷的几种解决方法"></a>三，关于盒子塌陷的几种解决方法</h2><ol><li><p>最简单，直接，粗暴的方法就是盒子大小写死，给每个盒子设定固定的width和height，直到合适为止，这样的好处是简单方便，兼容性好，适合只改动少量内容不涉及盒子排布的版面，缺点是非自适应，浏览器的窗口大小直接影响用户体验。</p></li><li><p>给外部的父盒子也添加浮动，让其也脱离标准文档流，这种方法方便，但是对页面的布局不是很友好，不易维护。</p></li><li><p>给父盒子添加overflow属性。<br> overflow:auto; 有可能出现滚动条，影响美观。<br> overflow:hidden; 可能会带来内容不可见的问题。</p></li><li><p>父盒子里最下方引入清除浮动块。最简单的有：<br> <code>&lt;span style=&quot;clear:both;&quot;&gt;&lt;/span&gt;</code><br> 有很多人是这么解决的，但是我们并不推荐，因为其引入了不必要的冗余元素 。</p></li><li><p>after伪类清除浮动。<br> 外部盒子的after伪元素设置clear属性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#parent</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">       <span class="attribute">clear</span>: both;</span><br><span class="line">       <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">       <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">       <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">       <span class="attribute">display</span>: block;</span><br><span class="line">       <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTML-CSS&quot;&gt;&lt;a href=&quot;#HTML-CSS&quot; class=&quot;headerlink&quot; title=&quot;HTML+CSS&quot;&gt;&lt;/a&gt;HTML+CSS&lt;/h1&gt;&lt;h2 id=&quot;一、盒子塌陷是什么？&quot;&gt;&lt;a href=&quot;#一、盒子塌陷是什么？&quot; class=&quot;
      
    
    </summary>
    
      <category term="前端" scheme="/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
